<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MonoForce.Controls</name>
    </assembly>
    <members>
        <!-- Badly formed XML comment ignored for member "T:MonoForce.Controls.ArchiveManager" -->
        <member name="P:MonoForce.Controls.ArchiveManager.ArchivePath">
            <summary>
            Gets the path to the archive file associated with the manager.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ArchiveManager.UseArchive">
            <summary>
            Indicates if an archive file was specified to read from or not. ???
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ArchiveManager.archive">
            <summary>
            Archive file associated with the archive manager.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ArchiveManager.archivePath">
            <summary>
            Path to the archive file associated with the archive manager.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ArchiveManager.useArchive">
            <summary>
            Indicates if an archive file was specified to read from or not. ???
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.ArchiveManager.GetAssetNames" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.ArchiveManager.GetAssetNames(System.String)" -->
        <member name="M:MonoForce.Controls.ArchiveManager.GetDirectories(System.String)">
            <returns>Returns an array of all directories under the specified path.</returns>
            <param name="path">Directory to start searching from in the archive.</param>
            <summary>
            Gets the list of all directories contained in the archive.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ArchiveManager.GetFileStream(System.String)">
            <returns>Returns the opened stream.</returns>
            <param name="filename">Name of the file to read.</param>
            <summary>
            Opens a stream for reading the specified file from the archive.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ArchiveManager.OpenStream(System.String)">
            <returns>Returns the opened stream.</returns>
            <param name="assetName">Name of the asset to read.</param>
            <summary>
            Opens a stream for reading the specified asset contained inside the archive.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.Banner">
            <summary>
            Represents a Banner control.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.BevelStyle">
            <summary>
            Describes different bevel styles.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.BevelBorder">
            <summary>
            Describes the side(s) of a control where a bevel will be applied.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Bevel.Border">
            <summary>
            Gets or sets the sides of a control the beveled edge will be applied to.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Bevel.Style">
            <summary>
            Gets or sets the style of the beveled control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Bevel.border">
            <summary>
            Specifies which sides of a control the beveled edge will be applied to.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Bevel.style">
            <summary>
            Describes the style of the beveled edges.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.Bevel.BorderChanged">
            <summary>
            Occurs when the border style of the bevel changes.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Bevel.Init">
            <summary>
            Initializes the control.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.Bevel.StyleChanged">
            <summary>
            Occurs when the style of the bevel changes.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Bevel.InitSkin">
            <summary>
            Initializes the control skin.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Bevel.OnBorderChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles bevel border changed events.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Bevel.OnStyleChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles bevel style changed events.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Bevel.DrawPart(MonoForce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,MonoForce.Controls.BevelBorder,MonoForce.Controls.BevelStyle,System.Boolean)">
            <param name="all">Indicates if the bevel is applied to a single side (false) or all sides (true) of the control.</param>
            <param name="style">Specifies the style of beveling to apply to the control.</param>
            <param name="pos">Specifies which side of the control is beveled.</param>
            <param name="rect">Bounds of the control the bevel is applied to.</param>
            <param name="renderer">Render management object.</param>
            <summary>
            Draws a piece of the beveled control based on the bevel's border and style.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.SizeMode">
            <summary>
            Specifies how an image is sized and positioned within a control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SizeMode.Normal">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SizeMode.Auto">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SizeMode.Centered">
            <summary>
            Image is centered within the control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SizeMode.Fit">
            <summary>
            Image is scaled down but its aspect ratio stays the same.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SizeMode.Stretched">
            <summary>
            Image is scaled to fit in the control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SizeMode.Tiled">
            <summary>
            Only Supported by ImageBox
            </summary>
        </member>
        <member name="T:MonoForce.Controls.ButtonMode">
            <summary>
            Specifies how a button reacts to clicks.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ButtonMode.Normal">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ButtonMode.PushButton">
            <summary>
            Toggle button.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.Glyph">
            <summary>
            Represents an image on a button.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Glyph.Color">
            <summary>
            Color tint to apply to the button.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Glyph.Image">
            <summary>
            The image asset.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Glyph.Offset">
            <summary>
            Offset from the button's position where the image will be drawn.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Glyph.SizeMode">
            <summary>
            Specifies how the image is sized on the button.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Glyph.SourceRect">
            <summary>
            Source region on the texture where the glyph appears.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Glyph.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D)">
            <param name="image">Glyph image asset.</param>
            <summary>
            Creates a new glyph from the specified texture.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Button.lrButton">
            <summary>
            The name of the layer that a button appears on.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Button.skButton">
            <summary>
            The name of the button element in the skin file.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Button.Glyph">
            <summary>
            Gets or sets the button's glyph. (image)
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Button.ModalResult">
            <summary>
            Gets or sets the value returned when the button of a dialog is clicked.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Button.Mode">
            <summary>
            Gets or sets the way the button operates, standard or toggle button.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Button.Pushed">
            <summary>
            Indicates whether the button is pressed or not.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Button.glyph">
            <summary>
            Image to display on the button.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Button.modalResult">
            <summary>
            should be returned when the button is clicked.
            When the button appears on a dialog, this indicates what value
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Button.mode">
            <summary>
            Specifies the type of button. Standard or Toggle.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Button.pushed">
            <summary>
            Indicates whether the button is currently pressed or not.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.Button.GlyphChanged">
            <summary>
            Occurs when the button's glyph is changed.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Button.Init">
            <summary>
            Initializes the button control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Button.InitSkin">
            <summary>
            Initializes the skin for the button control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Button.Dispose(System.Boolean)">
            <param name="disposing"></param>
            <summary>
            Releases resources used by the button control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Button.OnClick(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Button click event handler.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Button.OnGlyphChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Event handler for when the button's glyph is changed.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ButtonBase.ControlState">
            <summary>
            Gets the state of the button control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ButtonBase.#ctor(MonoForce.Controls.Manager)">
            <param name="manager">GUI manager for this control.</param>
            <summary>
            ButtonBase constructor.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ButtonBase.Init">
            <summary>
            Initializes the button base.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ButtonBase.OnClick(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles button click events.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.CheckBox.lrCheckBox">
            <summary>
            String to reference the control layer the checkbox is a part of.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.CheckBox.skCheckBox">
            <summary>
            String to reference the check box element in the skin file.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.CheckBox.Checked">
            <summary>
            Gets or sets the checked state of the control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.CheckBox.state">
            <summary>
            Indicates if the control is checked (true) or unchecked (false.)
            </summary>
        </member>
        <member name="E:MonoForce.Controls.CheckBox.CheckedChanged">
            <summary>
            Occurs when the control's check state value changes.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.CheckBox.Init">
            <summary>
            Initializes the check box control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.CheckBox.InitSkin">
            <summary>
            Initializes the check box control's skin.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.CheckBox.OnCheckedChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles the checked changed event when the value of the check state changes.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.CheckBox.OnClick(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles checkbox click events.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ClipControl.ClientArea">
            <summary>
            Gets or sets the client area of the clip control.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ClipControl.ClientMargins">
            <summary>
            Gets or sets the client area margins of the clip control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ClipControl.clientArea">
            <summary>
            Client area of the clip control.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.ClipControl.Add(MonoForce.Controls.Control,System.Boolean)" -->
        <member name="M:MonoForce.Controls.ClipControl.Add(MonoForce.Controls.Control)">
            <param name="control">Child control to add to the clip control.</param>
            <summary>
            Adds a child control to the clip box.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ClipControl.Init">
            <summary>
            Initializes the clip control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ClipControl.InitSkin">
            <summary>
            Initializes the skin for the clip control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ClipControl.Update(Microsoft.Xna.Framework.GameTime)">
            <param name="gameTime">Snapshot of the application's timing values.</param>
            <summary>
            Updates the clip control and its child controls.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ClipControl.AdjustMargins">
            <summary>
            Adjusts the margins of the clip control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ClipControl.OnResize(MonoForce.Controls.ResizeEventArgs)">
            <param name="e"></param>
            <summary>
            Handles resize events for the clip control.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.ColorPicker">
            <summary>
            Represents a color/hue picker control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ColorPicker.range">
            <summary>
            Range the track bar control's value can be within. [0, range]
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ColorPicker.hue">
            <summary>
            Current value of the track bar control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ColorPicker.stepSize">
            <summary>
            Small increment at which the track bar value changes.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ColorPicker.pageSize">
            <summary>
            Large increment at which the track bar value changes.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ColorPicker.scale">
            <summary>
            Indicates if the scale for the track bar should be drawn.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ColorPicker.btnSlider">
            <summary>
            Slider button that can be dragged to change the value of the track bar control.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ColorPicker.SelectedColor">
            <summary>
            Gets the current color of the color picker control.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ColorPicker.Hue">
            <summary>
            Gets or sets the current value of the color picker control.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ColorPicker.Range">
            <summary>
            Gets or sets the value range of the track bar control.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ColorPicker.PageSize">
            <summary>
            Gets or sets the amount the track bar's value is altered for large increments.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ColorPicker.StepSize">
            <summary>
            Gets or sets the amount the track bar's value is altered for small increments.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ColorPicker.Scale">
            <summary>
            Indicates if the scale for the track bar should be drawn.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ColorPicker.Slider">
            <summary>
            Slider button that can be dragged to change the value of the track bar control.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.ColorPicker.ValueChanged">
            <summary>
            Occurs when the value of the track bar changes.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.ColorPicker.RangeChanged">
            <summary>
            Occurs when the range of the track bar changes.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.ColorPicker.StepSizeChanged">
            <summary>
            Occurs when the step size value of the track bar changes.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.ColorPicker.PageSizeChanged">
            <summary>
            Occurs when the page size of the track bar changes.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ColorPicker.#ctor(MonoForce.Controls.Manager)">
            <summary>
            Creates a new ColorPicker control.
            </summary>
            <param name="manager">GUI manager for the control.</param>
        </member>
        <member name="M:MonoForce.Controls.ColorPicker.Init">
            <summary>
            Initializes the track bar control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ColorPicker.InitSkin">
            <summary>
            Initializes the skin of the track bar control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ColorPicker.DrawControl(MonoForce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the track bar control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination region where the control will be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:MonoForce.Controls.ColorPicker.btnSlider_Move(System.Object,MonoForce.Controls.MoveEventArgs)">
            <summary>
            Handles slider button move events.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.ColorPicker.RecalcParams">
            <summary>
            Updates the position of the slider button.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ColorPicker.OnMousePress(MonoForce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse press events for the track bar control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.ColorPicker.btnSlider_GamePadPress(System.Object,MonoForce.Controls.GamePadEventArgs)">
            <summary>
            Handles gamepad left/right button presses for the track bar control.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.ColorPicker.btnSlider_KeyPress(System.Object,MonoForce.Controls.KeyEventArgs)">
            <summary>
            Handles key press events for the track bar control.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.ColorPicker.OnResize(MonoForce.Controls.ResizeEventArgs)">
            <summary>
            Handles resizing of the track bar control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.ColorPicker.OnValueChanged(MonoForce.Controls.EventArgs)">
            <summary>
            Handles changes in the track bar's value.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.ColorPicker.OnRangeChanged(MonoForce.Controls.EventArgs)">
            <summary>
            Handles changes in the track bar's range.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.ColorPicker.OnPageSizeChanged(MonoForce.Controls.EventArgs)">
            <summary>
            Handles changes in the track bar's page size.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.ColorPicker.OnStepSizeChanged(MonoForce.Controls.EventArgs)">
            <summary>
            Handles changes in the track bar's step size.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:MonoForce.Controls.ComboBox.DrawSelection">
            <summary>
            Indicates if the selection image should be drawn on the drop-down list control.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ComboBox.ItemIndex">
            <summary>
            Gets or sets the index of the selected item.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ComboBox.Items">
            <summary>
            Gets the combo box's drop-down list contents.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ComboBox.MaxItems">
            <summary>
            Gets or sets the number of selections in the drop-down list.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ComboBox.ReadOnly">
            <summary>
            Indicates if the combo box's text box control is read-only or not.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ComboBox.btnDown">
            <summary>
            Drop-down button.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ComboBox.items">
            <summary>
            List of selectable entries that compose the drop-down list.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ComboBox.drawSelection">
            <summary>
            Indicates whether the selected index should be drawn. ???
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ComboBox.lstCombo">
            <summary>
            List box control of the combo box.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ComboBox.maxItems">
            <summary>
            Maximum number of entries in the combo box's drop-down list.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ComboBox.Init">
            <summary>
            Initializes the combo box control.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.ComboBox.ItemIndexChanged">
            <summary>
            Occurs when the index of the selected item changes.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.ComboBox.MaxItemsChanged">
            <summary>
            Occurs when the number of selections in the drop-down list changes.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ComboBox.InitSkin">
            <summary>
            Initializes the skin of the combo box control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ComboBox.AdjustMargins">
            <summary>
            Adjusts the margins of the client area of the combo box control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ComboBox.Dispose(System.Boolean)">
            <param name="disposing"></param>
            <summary>
            Releases resources used by the combo box control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ComboBox.OnGamePadDown(MonoForce.Controls.GamePadEventArgs)">
            <param name="e"></param>
            <summary>
            Handles gamepad button down events for the combo box control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ComboBox.OnItemIndexChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles list item index changed events for the combo box control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ComboBox.OnKeyDown(MonoForce.Controls.KeyEventArgs)">
            <param name="e"></param>
            <summary>
            Handles a key down event for the combo box control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ComboBox.OnMaxItemsChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles additions/removals to/from the combo box list control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ComboBox.OnMouseDown(MonoForce.Controls.MouseEventArgs)">
            <param name="e"></param>
            <summary>
            Handles mouse down event for the combo box control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ComboBox.OnResize(MonoForce.Controls.ResizeEventArgs)">
            <param name="e"></param>
            <summary>
            Handles the resize event.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ComboBox.btnDown_Click(System.Object,MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles the click event.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ComboBox.Input_MouseDown(System.Object,MonoForce.Controls.MouseEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles the mouse button down event.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ComboBox.lstCombo_Click(System.Object,MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles a click on the drop-down list of the combo box control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ComboBox.lstCombo_FocusLost(System.Object,MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles the focus lost event for a combo box's list control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Component.initialized">
            <summary>
            Indicates if the component has been initialized or not.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Component.manager">
            <summary>
            GUI manager for the component.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Component.#ctor(MonoForce.Controls.Manager)">
            <param name="manager">GUI manager for the component.</param>
            <summary>
            Creates a new Component.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Component.Init">
            <summary>
            Initializes the component.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Component.Update(Microsoft.Xna.Framework.GameTime)">
            <param name="gameTime">Snapshot of the application's timing values.</param>
            <summary>
            Updates the component.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Component.Dispose(System.Boolean)">
            <param name="disposing"></param>
            <summary>
            Releases resources used by the component.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.ConsoleMessage">
            <summary>
            Represents a single message sent to a console.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ConsoleMessage.Text">
            <summary>
            Message text.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ConsoleMessage.Channel">
            <summary>
            Console channel index.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ConsoleMessage.Time">
            <summary>
            Message time stamp.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ConsoleMessage.Color">
            <summary>
            Color of the message, If different than channel color.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ConsoleMessage.NoShow">
            <summary>
            Defines if the date/time is shown, or plain text
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ConsoleMessage.Lines">
            <summary>
            Describes how many lines the text has.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ConsoleMessage.#ctor(System.String,System.Byte,Microsoft.Xna.Framework.Color)">
            <summary>
            Creates a new console message with color.
            </summary>
            <param name="text">Message text.</param>
            <param name="channel">Console channel index.</param>
            <param name="color">Color of the message</param>
        </member>
        <member name="M:MonoForce.Controls.ConsoleMessage.#ctor(System.String,System.Byte)">
            <summary>
            Creates a new console message.
            </summary>
            <param name="text">Message text.</param>
            <param name="channel">Console channel index.</param>
        </member>
        <member name="T:MonoForce.Controls.ChannelList">
            <summary>
            Represents a list of console channels.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ChannelList.Item(System.String)">
            <summary>
            Gets or sets a console channel by channel name.
            </summary>
            <param name="name">Console channel name.</param>
        </member>
        <member name="P:MonoForce.Controls.ChannelList.Item(System.Byte)">
            <summary>
            Gets or sets a console channel by the channel's index.
            </summary>
            <param name="index">Console channel index.</param>
        </member>
        <member name="T:MonoForce.Controls.ConsoleChannel">
            <summary>
            Represents a single channel of the console.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ConsoleChannel.name">
            <summary>
            Name of the console channel.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ConsoleChannel.index">
            <summary>
            Index of the console channel.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ConsoleChannel.color">
            <summary>
            Color of the console channel's message text.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ConsoleChannel.#ctor(System.Byte,System.String,Microsoft.Xna.Framework.Color)">
            <summary>
            Creates a new console channel.
            </summary>
            <param name="index">Index of the console channel.</param>
            <param name="name">Name of the console channel.</param>
            <param name="color">Color of the console channel message text.</param>
        </member>
        <member name="P:MonoForce.Controls.ConsoleChannel.Index">
            <summary>
            Gets or sets the index of the console channel.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ConsoleChannel.Color">
            <summary>
            Gets or sets the text color of the console channel's messages.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ConsoleChannel.Name">
            <summary>
            Gets or sets the name of the console channel.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.ConsoleMessageFormats">
            <summary>
            Describes the format of a console message.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ConsoleMessageFormats.None">
            <summary>
            Messages only display the body text.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ConsoleMessageFormats.ChannelName">
            <summary>
            Messages are prefixed with the channel name.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ConsoleMessageFormats.TimeStamp">
            <summary>
            Messages are prefixed with the time they were sent.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ConsoleMessageFormats.All">
            <summary>
            Messages are prefixed with the channel name and timestamp.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.Console">
            <summary>
            Multi-channel console control that also allows user text input.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Console.txtMain">
            <summary>
            Text box control where console messages can be input.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Console.cmbMain">
            <summary>
            Console channel selection box.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Console.sbVert">
            <summary>
            Console text box's vertical scroll bar control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Console.buffer">
            <summary>
            Console message list.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Console.sentMessages">
            <summary>
            Users sent message list
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Console.channels">
            <summary>
            List of console channels for this console.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Console.filter">
            <summary>
            Console channel filter list.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Console.messageFormat">
            <summary>
            Console message format.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Console.channelsVisible">
            <summary>
            Indicates if the channel selection combo box is visible.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Console.textBoxVisible">
            <summary>
            Indicates if the user input text box is visible.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Console.historyIndex">
            <summary>
            Selected history by pressing "Up"
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Console.MessageBuffer">
            <summary>
            Gets or sets the console's message buffer.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Console.Channels">
            <summary>
            Gets or sets the console's channel list.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Console.ChannelFilter">
            <summary>
            Gets or sets the console's channel filter.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Console.SelectedChannel">
            <summary>
            Gets or sets the console's current channel.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Console.MessageFormat">
            <summary>
            Gets or sets the console's message format.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Console.ChannelsVisible">
            <summary>
            Indicates whether the console is displaying the console channels or not. ???
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Console.TextBoxVisible">
            <summary>
            Indicates if the console's text box is visible or not.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Console.TextBox">
            <summary>
            The textbox input for the console
            </summary>
        </member>
        <member name="E:MonoForce.Controls.Console.MessageSent">
            <summary>
            Occurs when a console message is sent.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Console.#ctor(MonoForce.Controls.Manager)">
            <summary>
            Creates a new console control.
            </summary>
            <param name="manager">GUI manager for the console.</param>
        </member>
        <member name="M:MonoForce.Controls.Console.PositionControls">
            <summary>
            Helper to position controls based on the visibility of the input text box control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Console.Init">
            <summary>
            Initializes the console control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Console.InitSkin">
            <summary>
            Initializes the skin of the console control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Console.LastMouseState">
            <summary>
            Updates the console control.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:MonoForce.Controls.Console.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the state of the list box and watches for changes in list size.
            </summary>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:MonoForce.Controls.Console.ClientArea_Draw(System.Object,MonoForce.Controls.DrawEventArgs)">
            <summary>
            Draws the client area of the console.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Console.DrawControl(MonoForce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the console control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination rectangle where the control should be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:MonoForce.Controls.Console.txtMain_FocusGained(System.Object,System.EventArgs)">
            <summary>
            Updates the active console channel and the text color when 
            the text box control receives focus.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Console.txtMain_KeyDown(System.Object,MonoForce.Controls.KeyEventArgs)">
            <summary>
            Handles key down events for the text box. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Console.txtMain_GamePadDown(System.Object,MonoForce.Controls.GamePadEventArgs)">
            <summary>
            Handles gamepad button down events for the text box.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Console.SendMessage(MonoForce.Controls.EventArgs)">
            <summary>
            Handles key and button press events the console input text box receives.
            </summary>
            <param name="x"></param>
        </member>
        <member name="M:MonoForce.Controls.Console.OnMessageSent(MonoForce.Controls.ConsoleMessageEventArgs)">
            <summary>
            Handles console message sent events.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Console.channels_ItemAdded(System.Object,System.EventArgs)">
            <summary>
            Handles repopulating the channel list when an item is added.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Console.channels_ItemRemoved(System.Object,System.EventArgs)">
            <summary>
            Handles repopulating the channels list when items are removed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Console.buffer_ItemAdded(System.Object,System.EventArgs)">
            <summary>
            Handles adding new messages to the console message area.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Console.CalcScrolling">
            <summary>
            Updates the scroll bar values based on the font size, console dimensions, and number of messages.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Console.sbVert_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Redraws the console's message area after a scrolling event occurs.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Console.OnResize(MonoForce.Controls.ResizeEventArgs)">
            <summary>
            Updates scroll bar values after the console window has been resized.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Console.GetFilteredBuffer(System.Collections.Generic.List{System.Byte})">
            <summary>
            Gets all console messages from channels with matching indexes specified in the filter list.
            </summary>
            <param name="filter">List of channel indexes to retrieve messages for.</param>
            <returns>Returns all messages from channels whose index is specified in the filter list.</returns>
        </member>
        <member name="T:MonoForce.Controls.ScrollBarValue">
            <summary>
            Stores the values of the container's horizontal and vertical scroll bars.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Container.AutoScroll">
            <summary>
            Indicates if scroll bars will be displayed/hidden automatically.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Container.DefaultControl">
            <summary>
            Gets or sets the default control of the container.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Container.MainMenu">
            <summary>
            Gets or sets the main menu of the container control.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Container.ScrollAlot">
            <summary>
            Scroll by PageSize (true) or StepSize (false)
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Container.ScrollBarValue">
            <summary>
            Gets the values of the container's horizontal and vertical scroll bars.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Container.StatusBar">
            <summary>
            Gets or sets the container's status bar control.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Container.ToolBarPanel">
            <summary>
            Gets or sets the tool bar panel of the container control.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Container.Visible">
            <summary>
            Indicates if the container is visible.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Container.HorizontalScrollBar">
            <summary>
            Gets the container's horizontal scroll bar.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Container.VerticalScrollBar">
            <summary>
            Gets the container's vertical scroll bar.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Container.sbHorz">
            <summary>
            Container control's horizontal scroll bar.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Container.sbVert">
            <summary>
            Container control's vertical scroll bar.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Container.autoScroll">
            <summary>
            Indicates if the container will automatically show/hide the client area scroll bars as needed.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Container.defaultControl">
            <summary>
            Container's default control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Container.mainMenu">
            <summary>
            Container control's main menu.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Container.scrollAlot">
            <summary>
            Scroll by PageSize (true) or StepSize (false)
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Container.statusBar">
            <summary>
            Status bar control of the container.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Container.toolBarPanel">
            <summary>
            Tool bar panel of the container control.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Container.Add(MonoForce.Controls.Control,System.Boolean)" -->
        <member name="M:MonoForce.Controls.Container.Init">
            <summary>
            Initializes the container control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Container.Invalidate">
            <summary>
            Invalidates the control and forces redrawing of it.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Container.ScrollTo(System.Int32,System.Int32)">
            <param name="y">New vertical scroll bar value.</param>
            <param name="x">New horizontal scroll bar value.</param>
            <summary>
            Scrolls to the specified scroll bar positions.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Container.ScrollTo(MonoForce.Controls.Control)">
            <param name="control"></param>
            <summary>
            Adjusts the scroll bar values so the specified control is displayed in the client region.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Container.InitSkin">
            <summary>
            Initializes the skin of the container control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Container.OnSkinChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handler for when the container's skin is changed.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Container.Update(Microsoft.Xna.Framework.GameTime)">
            <param name="gameTime"></param>
            <summary>
            Updates the container control and all child controls.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Container.AdjustMargins">
            <summary>
            the tool bar panel, the status bar, and the scroll bars.
            Adjusts the container's margins to account for the visibility of the main menu,
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Container.OnClick(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles click events for the container control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Container.OnResize(MonoForce.Controls.ResizeEventArgs)">
            <param name="e"></param>
            <summary>
            Handles resizing of the container control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Container.Bars_Resize(System.Object,MonoForce.Controls.ResizeEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            (Updates the container margins.)
            Handlers for when the main menu, tool bar panel, or status bar are resized.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Container.CalcScrolling">
            <summary>
            Updates the visibility of scroll bars based on client area actual and vitual dimensions.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Container.PositionScrollBars">
            <summary>
            Adjusts the position of the container's horizontal and vertical scroll bars.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Container.ScrollBarValueChanged(System.Object,MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles changes in scroll bar values.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.LayoutXmlDocument">
            <summary>
            Represents a Neoforce Layout file.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.SkinXmlDocument">
            <summary>
            Represents a Neoforce Skin file.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.SkinReader">
            <summary>
            Reads a Skin document from binary format. (.xml | .skin) ???
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SkinReader.Read(Microsoft.Xna.Framework.Content.ContentReader,MonoForce.Controls.SkinXmlDocument)">
            <returns>Returns the loaded skin file.</returns>
            <param name="existingInstance">Existing instance to read stream data into.</param>
            <param name="input">Content reader used to read the skin file.</param>
            <summary>
            Reads a Skin file from binary format.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.LayoutReader">
            <summary>
            Reads a Layout document from binary format.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.LayoutReader.Read(Microsoft.Xna.Framework.Content.ContentReader,MonoForce.Controls.LayoutXmlDocument)">
            <returns>Returns the Layout document from the stream.</returns>
            <param name="existingInstance">Existing instance to read into.</param>
            <param name="input">Content reader used to read the Layout document.</param>
            <summary>
            Reads a Layout document from the current stream.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.CursorReader">
            <summary>
            Reads a cursor file from binary format.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.CursorReader.Read(Microsoft.Xna.Framework.Content.ContentReader,MonoForce.Controls.Cursor)">
            <returns>Returns the cursor object from the stream.</returns>
            <param name="existingInstance">Existing cursor object to read into.</param>
            <param name="input">Content reader used to read the cursor.</param>
            <summary>
            Reads a cursor type from the current stream.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:MonoForce.Controls.ContextMenu" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.ContextMenu.timer" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.ContextMenu.sender" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.ContextMenu.Sender" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.ContextMenu.#ctor(MonoForce.Controls.Manager)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.ContextMenu.Dispose(System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.ContextMenu.Init" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.ContextMenu.InitSkin" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.ContextMenu.DrawControl(MonoForce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.ContextMenu.LineHeight" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.ContextMenu.LineWidth" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.ContextMenu.AutoSize" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.ContextMenu.TrackItem(System.Int32,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.ContextMenu.OnMouseMove(MonoForce.Controls.MouseEventArgs)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.ContextMenu.Update(Microsoft.Xna.Framework.GameTime)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.ContextMenu.OnMouseOut(MonoForce.Controls.MouseEventArgs)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.ContextMenu.OnClick(MonoForce.Controls.EventArgs)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.ContextMenu.OnKeyPress(MonoForce.Controls.KeyEventArgs)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.ContextMenu.OnGamePadPress(MonoForce.Controls.GamePadEventArgs)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.ContextMenu.HideMenu(System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.ContextMenu.Show" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.ContextMenu.Show(MonoForce.Controls.Control,System.Int32,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.ContextMenu.Input_MouseDown(System.Object,MonoForce.Controls.MouseEventArgs)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.ContextMenu.CheckArea(System.Int32,System.Int32)" -->
        <member name="T:MonoForce.Controls.GamePadActions">
            <summary>
            Defines the gamepad button to action mappings.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.GamePadActions.Click">
            <summary>
            Button mapped to a control click event.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.GamePadActions.ContextMenu">
            <summary>
            Button mapped to show the context menu of a control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.GamePadActions.Down">
            <summary>
            Button mapped to the Down action.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.GamePadActions.Left">
            <summary>
            Button mapped to the Left action.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.GamePadActions.NextControl">
            <summary>
            Button mapped to control navigation.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.GamePadActions.Press">
            <summary>
            Button mapped to a control press event.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.GamePadActions.PrevControl">
            <summary>
            Button mapped to control navigation.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.GamePadActions.Right">
            <summary>
            Button mapped to the Right action.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.GamePadActions.Up">
            <summary>
            Button mapped to the Up action.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.ControlsList">
            <summary>
            Defines type used as a controls collection.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ControlsList.#ctor">
            <summary>
            Creates a new ControlsList.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ControlsList.#ctor(System.Int32)">
            <param name="capacity"></param>
            <summary>
            Creates a new ControlsList with the specified initial capacity.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ControlsList.#ctor(System.Collections.Generic.IEnumerable{MonoForce.Controls.Control})">
            <param name="collection"></param>
            <summary>
            Creates a new ControlsList and populates it with the items from the source collection.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:MonoForce.Controls.Control" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.UndefinedColor" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.Stack" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.cursor" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.color" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.textColor" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.backColor" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.alpha" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.Hoveralpha" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.anchor" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.resizeEdge" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.text" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.visible" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.enabled" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.skin" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.parent" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.root" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.left" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.top" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.width" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.height" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.suspended" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.contextMenu" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.tooltipTimer" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.hoverTimer" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.doubleClickTimer" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.doubleClickButton" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.toolTipType" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.toolTip" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.doubleClicks" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.outlineResizing" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.outlineMoving" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.name" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.tag" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.gamePadActions" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.designMode" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.partialOutline" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.drawingRect" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.controls" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.movableArea" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.passive" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.detached" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.movable" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.resizable" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.invalidated" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.canFocus" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.resizerSize" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.minimumWidth" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.maximumWidth" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.minimumHeight" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.maximumHeight" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.topModifier" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.leftModifier" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.virtualHeight" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.virtualWidth" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.stayOnBack" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.stayOnTop" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.target" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.pressSpot" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.pressDiff" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.resizeArea" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.hovered" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.inside" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.pressed" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.isMoving" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.isResizing" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.margins" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.anchorMargins" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.clientMargins" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.outlineRect" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.scrollWheel" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.drawFormattedText" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Cursor" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.DrawFormattedText" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Controls" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.MovableArea" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.IsChild" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.IsParent" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.IsRoot" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.CanFocus" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Detached" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Passive" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Movable" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Resizable" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.ResizerSize" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.ContextMenu" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.DoubleClicks" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.OutlineResizing" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.OutlineMoving" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Tag" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Margins" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.DesignMode" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.GamePadActions" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.PartialOutline" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.StayOnBack" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.StayOnTop" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Name" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Focused" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.ControlState" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.ToolTipType" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.ToolTip" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.IsPressed" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.TopModifier" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.LeftModifier" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.VirtualHeight" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.VirtualWidth" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.DrawingRect" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Suspended" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Hovered" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Inside" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Pressed" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.IsMoving" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.IsResizing" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Anchor" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.ResizeEdge" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Skin" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Text" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Alpha" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.BackColor" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Color" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.TextColor" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Enabled" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Visible" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Parent" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Root" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Right" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Left" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Bottom" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Top" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Width" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.Height" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.MinimumWidth" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.MinimumHeight" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.MaximumWidth" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.MaximumHeight" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.AbsoluteLeft" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.AbsoluteTop" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.OriginLeft" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.OriginTop" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.OriginWidth" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.OriginHeight" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.ClientMargins" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.ClientLeft" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.ClientTop" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.ClientWidth" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.ClientHeight" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.AbsoluteRect" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.OriginRect" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.ClientRect" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.ControlRect" -->
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Control.OutlineRect" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.Click" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.DoubleClick" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.MouseDown" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.MousePress" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.MouseUp" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.MouseMove" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.MouseOver" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.MouseOut" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.MouseScroll" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.KeyDown" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.KeyPress" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.KeyUp" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.GamePadDown" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.GamePadUp" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.GamePadPress" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.Move" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.ValidateMove" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.Resize" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.ValidateResize" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.Draw" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.MoveBegin" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.MoveEnd" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.ResizeBegin" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.ResizeEnd" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.ColorChanged" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.TextColorChanged" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.BackColorChanged" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.TextChanged" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.AnchorChanged" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.SkinChanging" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.SkinChanged" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.ParentChanged" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.RootChanged" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.VisibleChanged" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.EnabledChanged" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.AlphaChanged" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.FocusLost" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.FocusGained" -->
        <!-- Badly formed XML comment ignored for member "E:MonoForce.Controls.Control.DrawTexture" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.#ctor(MonoForce.Controls.Manager)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.Clone" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.Dispose(System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.GetVirtualHeight" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.GetVirtualWidth" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.GetClippingRect(MonoForce.Controls.Control)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.CreateRenderTarget(System.Int32,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.PrepareTexture(MonoForce.Controls.Renderer,Microsoft.Xna.Framework.GameTime)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.CheckDetached(MonoForce.Controls.Control)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.DrawChildControls(MonoForce.Controls.Renderer,Microsoft.Xna.Framework.GameTime,System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.DrawControls(MonoForce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime,System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.DrawDetached(MonoForce.Controls.Control,MonoForce.Controls.Renderer,Microsoft.Xna.Framework.GameTime)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.Render(MonoForce.Controls.Renderer,Microsoft.Xna.Framework.GameTime)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.DrawOutline(MonoForce.Controls.Renderer,System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.SetPosition(System.Int32,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.SetSize(System.Int32,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.SetAnchorMargins" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.ProcessAnchor(MonoForce.Controls.ResizeEventArgs)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.Init" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.InitSkin" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.SetDefaultSize(System.Int32,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.SetMinimumSize(System.Int32,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.OnDeviceSettingsChanged(MonoForce.Controls.DeviceEventArgs)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.DrawControl(MonoForce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)" -->
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Control.list" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.CheckLayer(MonoForce.Controls.SkinControl,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.CheckLayer(MonoForce.Controls.SkinControl,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.GetControl(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.Add(MonoForce.Controls.Control)" -->
        <member name="M:MonoForce.Controls.Control.Remove(MonoForce.Controls.Control)">
            <summary>
            Removes the specified control from the child control list.
            </summary>
            <param name="control">Control to remove from the child control list.</param>
        </member>
        <member name="M:MonoForce.Controls.Control.Contains(MonoForce.Controls.Control,System.Boolean)">
            <summary>
            Determines if the specified control is a child or descendant of this control.
            </summary>
            <param name="control">Control to search for in the child control collection.</param>
            <param name="recursively">Recursively check the children of children when searching.
            If false is specified, only first-level children are checked.</param>
            <returns>Returns true if the specified control is a child of this control.</returns>
        </member>
        <member name="M:MonoForce.Controls.Control.Invalidate">
            <summary>
            Invalidates the control and parent controls forcing a redraw.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Control.BringToFront">
            <summary>
            Brings the control to the front-most Z-order.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Control.SendToBack">
            <summary>
            Sends the control to the back of the Z-order.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Control.Show">
            <summary>
            Makes the control visible.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Control.Hide">
            <summary>
            Hides the control from rendering.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Control.Refresh">
            <summary>
            Refreshes the control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Control.SendMessage(MonoForce.Controls.Message,MonoForce.Controls.EventArgs)">
            <summary>
            Sends an event message to the control. 
            </summary>
            <param name="message">Message to send to the control.</param>
            <param name="e">Event arguments for the message.</param>
        </member>
        <member name="M:MonoForce.Controls.Control.MessageProcess(MonoForce.Controls.Message,MonoForce.Controls.EventArgs)">
            <summary>
            Processes message events for the control.
            </summary>
            <param name="message">Event message to process.</param>
            <param name="e">Event arguments for the message.</param>
        </member>
        <member name="M:MonoForce.Controls.Control.GamePadPressProcess(MonoForce.Controls.GamePadEventArgs)">
            <summary>
            Processes gamepad button press events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.GamePadUpProcess(MonoForce.Controls.GamePadEventArgs)">
            <summary>
            Processes gamepad button up events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.GamePadDownProcess(MonoForce.Controls.GamePadEventArgs)">
            <summary>
            Processes gamepad button down events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.KeyPressProcess(MonoForce.Controls.KeyEventArgs)">
            <summary>
            Processes key press events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.KeyDownProcess(MonoForce.Controls.KeyEventArgs)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.KeyUpProcess(MonoForce.Controls.KeyEventArgs)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.MouseDownProcess(MonoForce.Controls.MouseEventArgs)" -->
        <member name="M:MonoForce.Controls.Control.MouseUpProcess(MonoForce.Controls.MouseEventArgs)">
            <summary>
            Processes mouse button up events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.MousePressProcess(MonoForce.Controls.MouseEventArgs)">
            <summary>
            Processes mouse button press events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.MouseOverProcess(MonoForce.Controls.MouseEventArgs)">
            <summary>
            Processes mouse over events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.MouseOutProcess(MonoForce.Controls.MouseEventArgs)" -->
        <member name="M:MonoForce.Controls.Control.MouseMoveProcess(MonoForce.Controls.MouseEventArgs)">
            <summary>
            Processes mouse move events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.ClickProcess(MonoForce.Controls.EventArgs)">
            <summary>
            Processes mouse button click events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.ToolTipUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the control's tool tip.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Control.ToolTipOver">
            <summary>
            Updates the tool tip delay timer when the control is hovered.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Control.ToolTipOut">
            <summary>
            Resets the tool tip delay timer when the mouse position leaves the control boundaries.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Control.CheckPosition(Microsoft.Xna.Framework.Point)">
            <summary>
            Determines if the specified point is within the bounds of the control.
            </summary>
            <param name="pos">Position to test.</param>
            <returns>Returns true if "pos" if within the bounds of the control; false otherwise.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.CheckMovableArea(Microsoft.Xna.Framework.Point)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.CheckResizableArea(Microsoft.Xna.Framework.Point)" -->
        <member name="M:MonoForce.Controls.Control.CheckWidth(System.Int32@)">
            <summary>
            
            </summary>
            <param name="w"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.CheckHeight(System.Int32@)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Control.PerformResize(MonoForce.Controls.MouseEventArgs)" -->
        <member name="M:MonoForce.Controls.Control.GetResizeCursor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MonoForce.Controls.Control.GetResizePosition(MonoForce.Controls.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnMouseUp(MonoForce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse button up events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnMouseDown(MonoForce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse button down events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnMouseMove(MonoForce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse move events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnMouseOver(MonoForce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse over events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnMouseOut(MonoForce.Controls.MouseEventArgs)">
            <summary>
            Handle mouse out events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnClick(MonoForce.Controls.EventArgs)">
            <summary>
            Handles mouse click events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnDoubleClick(MonoForce.Controls.EventArgs)">
            <summary>
            Handles double click events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnMove(MonoForce.Controls.MoveEventArgs)">
            <summary>
            Handles move events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnResize(MonoForce.Controls.ResizeEventArgs)">
            <summary>
            Handles resize events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnValidateResize(MonoForce.Controls.ResizeEventArgs)">
            <summary>
            Handles validation of new sizes after a move event takes place.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnValidateMove(MonoForce.Controls.MoveEventArgs)">
            <summary>
            Handles validation of new positions after a move event takes place.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnMoveBegin(MonoForce.Controls.EventArgs)">
            <summary>
            Handler for when a move operation begins.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnMoveEnd(MonoForce.Controls.EventArgs)">
            <summary>
            Handler for when a move operation has finished.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnResizeBegin(MonoForce.Controls.EventArgs)">
            <summary>
            Handler used when a resize operation has begun.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnResizeEnd(MonoForce.Controls.EventArgs)">
            <summary>
            Handler used when a resize operation has completed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnParentResize(System.Object,MonoForce.Controls.ResizeEventArgs)">
            <summary>
            Handles changes in the parent control's size for the control.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnKeyUp(MonoForce.Controls.KeyEventArgs)">
            <summary>
            Handles key up events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnKeyDown(MonoForce.Controls.KeyEventArgs)">
            <summary>
            Handles key down events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnKeyPress(MonoForce.Controls.KeyEventArgs)">
            <summary>
            Handles key press events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnGamePadUp(MonoForce.Controls.GamePadEventArgs)">
            <summary>
            Handles gamepad button up events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnGamePadDown(MonoForce.Controls.GamePadEventArgs)">
            <summary>
            Handles gamepad button down events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnGamePadPress(MonoForce.Controls.GamePadEventArgs)">
            <summary>
            Handle gamepad button press events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnDraw(MonoForce.Controls.DrawEventArgs)">
            <summary>
            Handles draw events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnDrawTexture(MonoForce.Controls.DrawEventArgs)">
            <summary>
            Handles draw texture events for the control. (Drawing to the control's render target.)
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnColorChanged(MonoForce.Controls.EventArgs)">
            <summary>
            Handles color change events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnTextColorChanged(MonoForce.Controls.EventArgs)">
            <summary>
            Handles changes of the control's text color.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnBackColorChanged(MonoForce.Controls.EventArgs)">
            <summary>
            Handles changes of the control's background color.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnTextChanged(MonoForce.Controls.EventArgs)">
            <summary>
            Handles changes of the control's text.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnAnchorChanged(MonoForce.Controls.EventArgs)">
            <summary>
            Handles changes of the control's anchor points.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnSkinChanged(MonoForce.Controls.EventArgs)">
            <summary>
            Handles skin changed events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnSkinChanging(MonoForce.Controls.EventArgs)">
            <summary>
            Handles skin changing events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnParentChanged(MonoForce.Controls.EventArgs)">
            <summary>
            Handles changes of the control's parent.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnRootChanged(MonoForce.Controls.EventArgs)">
            <summary>
            Handles changes of the root control of the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnVisibleChanged(MonoForce.Controls.EventArgs)">
            <summary>
            Handles changes in the visibility of the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnEnabledChanged(MonoForce.Controls.EventArgs)">
            <summary>
            Handles changes in the enabled value of the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnAlphaChanged(MonoForce.Controls.EventArgs)">
            <summary>
            Handles changes in the alpha value of the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnFocusLost(MonoForce.Controls.EventArgs)">
            <summary>
            Handles focus lost events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnFocusGained(MonoForce.Controls.EventArgs)">
            <summary>
            Handles focus gained events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.Control.OnMousePress(MonoForce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse press events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:MonoForce.Controls.ControlList`1">
            <summary>
            A listbox that can be used to create a list of any custom control, rather than simply text.
            </summary>
            <typeparam name="T">The type of control to use</typeparam>
        </member>
        <member name="M:MonoForce.Controls.ControlList`1.DrawPane(System.Object,MonoForce.Controls.DrawEventArgs)">
            <summary>
            Draws the list pane containing the collection items.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.ControlList`1.AutoHeight(System.Int32)">
            <summary>
            Sizes the list pane so the specified number of items will be able to be
            displayed in it without needing a scroll bar.
            </summary>
            <param name="maxItems">Number of items that can be displayed without needing a scroll bar.</param>
        </member>
        <member name="M:MonoForce.Controls.ControlList`1.OnMouseDown(MonoForce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse button down events for the list box.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.ControlList`1.TrackItem(System.Int32,System.Int32)">
            <summary>
            Updates the list box selection when the mouse moves over one.
            </summary>
            <param name="x">Mouse X position.</param>
            <param name="y">Mouse Y position.</param>
        </member>
        <member name="M:MonoForce.Controls.ControlList`1.OnMouseMove(MonoForce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse move events for the list box.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.ControlList`1.ItemsChanged">
            <summary>
            Updates scroll bar values based on font size, list box size, and the number of collection items.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.Cursor">
            <summary>
            Provides a basic Software cursor
            </summary>
        </member>
        <member name="T:MonoForce.Controls.DeviceEventHandler">
            <param name="e"></param>
            <summary>
            Defines the signature for a device event handler.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.SkinEventHandler">
            <param name="e"></param>
            <summary>
            Defines the signature for a skin event handler.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.EventHandler">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Defines the signature for event handlers.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.MouseEventHandler">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Defines the signature for mouse event handlers.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.KeyEventHandler">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Defines the signature for key event handlers.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.GamePadEventHandler">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Defines the signature for gamepad event handlers.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.DrawEventHandler">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Defines the signature for draw event handlers.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.MoveEventHandler">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Defines the signature for move event handlers.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.ResizeEventHandler">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Defines the signature for resize event handlers.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.WindowClosingEventHandler">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Defines the signature for window closing event handlers.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.WindowClosedEventHandler">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Defines the signature for window closed event handlers.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.ConsoleMessageEventHandler">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Defines the signature for console message event handlers.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Dialog.BottomPanel">
            <summary>
            Gets the bottom panel of the dialog. (Contains the dialog button controls.)
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Dialog.Caption">
            <summary>
            Gets the dialog window title.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Dialog.Description">
            <summary>
            Gets the dialog window message.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Dialog.TopPanel">
            <summary>
            Gets the top panel of the dialog. (Contains the caption and description.)
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Dialog.lblCapt">
            <summary>
            Dialog window title.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Dialog.lblDesc">
            <summary>
            Dialog window message.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Dialog.pnlBottom">
            <summary>
            Panel containing the dialog buttons.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Dialog.pnlTop">
            <summary>
            Panel containing the title and message of the dialog.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Dialog.Init">
            <summary>
            Initializes the dialog window.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Disposable.count">
            <summary>
            Number of references to this object.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Disposable.#ctor">
            <summary>
            Creates a reference counted object.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Disposable.Dispose">
            <summary>
            Cleans up after the disposable object.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Disposable.Dispose(System.Boolean)">
            <param name="disposing"></param>
            <summary>
            Decreases the object's reference count.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Disposable.Finalize">
            <summary>
            Releases resources used by the object.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.EventArgs.Handled">
            <summary>
            has been handled or not.
            Indicates if the event the arguments belong with
            </summary>
        </member>
        <member name="F:MonoForce.Controls.KeyEventArgs.Alt">
            <summary>
            Indicates if the Alt key modifier is pressed.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.KeyEventArgs.Caps">
            <summary>
            Indicates if Caps Lock key is enabled.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.KeyEventArgs.Control">
            <summary>
            Indicates if the Control key modifier is pressed.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.KeyEventArgs.Key">
            <summary>
            Key for the event.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.KeyEventArgs.Shift">
            <summary>
            Indicates if the Shift key modifier is pressed.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.KeyEventArgs.#ctor">
            <summary>
            Creates a new instance of the KeyEventArgs class.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.KeyEventArgs.#ctor(Microsoft.Xna.Framework.Input.Keys)">
            <param name="key">Key argument for the event.</param>
            <summary>
            Creates a new instance of the KeyEventArgs class for the specified key.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.KeyEventArgs.#ctor(Microsoft.Xna.Framework.Input.Keys,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <param name="caps">Indicates if Caps Lock is enabled.</param>
            <param name="alt">Indicates if the Alt key modifier is pressed.</param>
            <param name="shift">Indicates if the Shift key modifier is pressed.</param>
            <param name="control">Indicates if the Control key modifier is pressed.</param>
            <param name="key">Key argument for the event.</param>
            <summary>
            Creates a new instance of the KeyEventArgs class for the specified key and modifiers.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.MouseEventArgs.Button">
            <summary>
            Mouse button state at the time of the event.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.MouseEventArgs.Difference">
            <summary>
            Mouse cursor position delta.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.MouseEventArgs.Position">
            <summary>
            Mouse cursor position.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.MouseEventArgs.ScrollDirection">
            <summary>
            Mouse scroll direction
            </summary>
        </member>
        <member name="F:MonoForce.Controls.MouseEventArgs.State">
            <summary>
            Mouse state at the time of the event.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.MouseEventArgs.#ctor(Microsoft.Xna.Framework.Input.MouseState,MonoForce.Controls.MouseButton,Microsoft.Xna.Framework.Point,MonoForce.Controls.MouseScrollDirection)" -->
        <member name="T:MonoForce.Controls.GamePadEventArgs">
            <summary>
            Event arguments for gamepad related events.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.GamePadEventArgs.Button">
            <summary>
            Gamepad button pressed for the event arguments.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.GamePadEventArgs.PlayerIndex">
            <summary>
            Index of the player the gamepad is associated with.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.GamePadEventArgs.State">
            <summary>
            State of the gamepad at the time of the event.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.GamePadEventArgs.Vectors">
            <summary>
            Values of the gamepad sticks and trigs.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.GamePadEventArgs.#ctor(Microsoft.Xna.Framework.PlayerIndex)">
            <param name="playerIndex">Player index of the gamepad.</param>
            <summary>
            Creates a new instance of the GamePadEventArgs class for the specified player.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.GamePadEventArgs.#ctor(Microsoft.Xna.Framework.PlayerIndex,MonoForce.Controls.GamePadButton)">
            <param name="button">Button pressed for the event.</param>
            <param name="playerIndex">Player index of the gamepad.</param>
            <summary>
            Creates a new instance of the GamePadEventArgs class for the specified player.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.DrawEventArgs.GameTime">
            <summary>
            Snapshot of the application's timing values.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.DrawEventArgs.Rectangle">
            <summary>
            Destination region where drawing will occur.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.DrawEventArgs.Renderer">
            <summary>
            Rendering object for the draw event.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.DrawEventArgs.#ctor">
            <summary>
            Creates a new default instance of the DrawEventArgs class.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.DrawEventArgs.#ctor(MonoForce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <param name="gameTime">Snapshot of the application's timing values.</param>
            <param name="rectangle">Destination region where drawing will occur.</param>
            <param name="renderer">Render management object for the event.</param>
            <summary>
            Creates an initialized instance of the DrawEventArgs class.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ResizeEventArgs.Height">
            <summary>
            New height of the object being resized.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ResizeEventArgs.OldHeight">
            <summary>
            Previous height of the object being resized.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ResizeEventArgs.OldWidth">
            <summary>
            Previous width of the object being resized.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ResizeEventArgs.Width">
            <summary>
            New width of the object being resized.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ResizeEventArgs.#ctor">
            <summary>
            Creates a new default instance of the ResizeEventArgs class.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ResizeEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <param name="oldHeight"></param>
            <param name="oldWidth"></param>
            <param name="height"></param>
            <param name="width"></param>
            <summary>
            Creates an initialized instance of the ResizeEventArgs class.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.MoveEventArgs.Left">
            <summary>
            Current X position of the object being moved.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.MoveEventArgs.OldLeft">
            <summary>
            Previous X position of the object being moved.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.MoveEventArgs.OldTop">
            <summary>
            Previous Y position of the object being moved.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.MoveEventArgs.Top">
            <summary>
            Current Y position of the object being moved.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.MoveEventArgs.#ctor">
            <summary>
            Creates a default instance of the MoveEventArgs class.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.MoveEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <param name="oldTop">Previous Y position of the object being moved.</param>
            <param name="oldLeft">Previous X position of the object being moved.</param>
            <param name="top">Current Y position of the object being moved.</param>
            <param name="left">Current X position of the object being moved.</param>
            <summary>
            Creates an initialized instance of the MoveEventArgs class.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.DeviceEventArgs.DeviceSettings">
            <summary>
            Arguments for the graphics manager PreparingDeviceSettings event.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.DeviceEventArgs.#ctor">
            <summary>
            Creates a default instance of the DeviceEventArgs class.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.DeviceEventArgs.#ctor(Microsoft.Xna.Framework.PreparingDeviceSettingsEventArgs)">
            <param name="deviceSettings">Arguments for the graphics manager PreparingDeviceSettings event.</param>
            <summary>
            Creates an initialized instance of the DeviceEventArgs class.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.WindowClosingEventArgs.Cancel">
            <summary>
            Indicates if the window closing operation should be canceled.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.WindowClosedEventArgs.Dispose">
            <summary>
            Indicates if the unmanaged window resources should be released.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.ConsoleMessageEventArgs">
            <summary>
            Event arguments for console message events.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ConsoleMessageEventArgs.Message">
            <summary>
            Console message for this event.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ConsoleMessageEventArgs.#ctor">
            <summary>
            Creates a default instance of the ConsoleMessageEventArgs class.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ConsoleMessageEventArgs.#ctor(MonoForce.Controls.ConsoleMessage)">
            <param name="message">Console message for the event.</param>
            <summary>
            Creates an initialized instance of the ConsoleMessageEventArgs class.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.EventedList`1.Add(`0)">
            <param name="item">Item to add to the collection.</param>
            <summary>
            Adds a new item to the collection.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.EventedList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <param name="collection">Collection of items to add to the collection.</param>
            <summary>
            Adds a collection of items to the collection.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.EventedList`1.Clear">
            <summary>
            Removes all the items from the collection.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.EventedList`1.Insert(System.Int32,`0)">
            <param name="item">Item to be inserted into the collection.</param>
            <param name="index">Zero-based index defining the insertion position.</param>
            <summary>
            Inserts a new item into the collection at the specified index.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.EventedList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
            <param name="collection">Collection of items to add to the collection at the specified index.</param>
            <param name="index">Zero-based index where the collection will be inserted.</param>
            <summary>
            Inserts a collection of items into the collection at the specified position.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.EventedList`1.ItemAdded">
            <summary>
            Occurs when an item is added to the list.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.EventedList`1.ItemRemoved">
            <summary>
            Occurs when an item is removed from the list.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.EventedList`1.Remove(`0)">
            <param name="obj">Item to remove from the collection.</param>
            <summary>
            Removes the specified item from the collection.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.EventedList`1.RemoveAll(System.Predicate{`0})">
            <returns>Returns the number of items removed from the collection.</returns>
            <param name="match">Predicate method used to evaluate collection items.</param>
            <summary>
            Removes all items in the collection that match the specified condition.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.EventedList`1.RemoveAt(System.Int32)">
            <param name="index">Zero-based index specifying which item to remove.</param>
            <summary>
            Removes an item from the collection at the specified index.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.EventedList`1.RemoveRange(System.Int32,System.Int32)">
            <param name="count">Number of items to remove from the collection.</param>
            <param name="index">Zero-based index to begin removal.</param>
            <summary>
            Removes a range of items from the collection beginning at the specified index.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ExitDialog.imgIcon">
            <summary>
            Dialog window icon image.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ExitDialog.lblMessage">
            <summary>
            Do you want to exit message.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ExitDialog.Init">
            <summary>
            Initializes the exit dialog window.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Extensions.ToColor(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Extensions.ToHex(Microsoft.Xna.Framework.Color,System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Extensions.ToLowerFast(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Colors.ColorFromHSV(System.Double,System.Double,System.Double)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Colors.Clamp(System.Int32)" -->
        <member name="T:MonoForce.Controls.FileDialog">
            <summary>
            A file dialog
            </summary>
            <remarks>
            Derived from the sample on Mike Kukta's blog.
            </remarks>
        </member>
        <member name="F:MonoForce.Controls.FileDialog.cmbDirectory">
            <summary>
            The combo box where the current directory is displayed.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.FileDialog.cmbDrives">
            <summary>
            The combo box where the drives are listed. 
            </summary>
        </member>
        <member name="F:MonoForce.Controls.FileDialog.lstFiles">
            <summary>
            The list box where directory files are displayed.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.FileDialog.txtFileName">
            <summary>
            Stores the full path of the currently selected file.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.FileDialog.txtFilter">
            <summary>
            Textbox for file extension filter.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.FileDialog.btnOpen">
            <summary>
            Button to open the selected file.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.FileDialog.btnCancel">
            <summary>
            Button to cancel the file open operation.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.FileDialog.btnDirectoryUp">
            <summary>
            Button used to move up one directory level.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.FileDialog.filters">
            <summary>
            Stores the list of file extensions to display. An 
            empty list will display all files. 
            </summary>
        </member>
        <member name="F:MonoForce.Controls.FileDialog.directory">
            <summary>
            Currently selected folder (full path.)
            </summary>
        </member>
        <member name="F:MonoForce.Controls.FileDialog.file">
            <summary>
            Currently selected file.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.FileDialog.showHiddenFiles">
            <summary>
            Flags for showing/hiding hidden and system files and folders.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.FileDialog.Filters">
            <summary>
            Gets the list of file extension filters for the dialog. 
            </summary>
        </member>
        <member name="P:MonoForce.Controls.FileDialog.FileName">
            <summary>
            Gets the name of the selected file. 
            </summary>
        </member>
        <member name="M:MonoForce.Controls.FileDialog.#ctor(MonoForce.Controls.Manager)">
            <summary>
            Creates a new instance of the open file dialog. 
            </summary>
        </member>
        <member name="M:MonoForce.Controls.FileDialog.Init">
            <summary>
            Initializes the dialog and its controls.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.FileDialog.btnCancel_Click(System.Object,MonoForce.Controls.EventArgs)">
            <summary>
            Closes the dialog.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.FileDialog.btnOpen_Click(System.Object,MonoForce.Controls.EventArgs)">
            <summary>
            Closes the dialog if a file was selected. The file name can be retrieved 
            from the Closing event. See test app for example. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.FileDialog.btnDirectoryUp_Click(System.Object,MonoForce.Controls.EventArgs)">
            <summary>
            Moves up a directory level. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.FileDialog.cmbDrives_ItemIndexChanged(System.Object,MonoForce.Controls.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MonoForce.Controls.FileDialog.lstFiles_ItemIndexChanged(System.Object,MonoForce.Controls.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:MonoForce.Controls.GroupBoxType">
            <summary>
            Defines how the GroupBox looks when rendered.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.GroupBox">
            <summary>
            Represents a container used to group together related controls.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.GroupBox.Type">
            <summary>
            Gets or sets the group box type.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.GroupBox.type">
            <summary>
            Defines the rendered look of the group box.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.GroupBox.#ctor(MonoForce.Controls.Manager)">
            <param name="manager">GUI manager for the group box.</param>
            <summary>
            Creates a new GroupBox container control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.GroupBox.Init">
            <summary>
            Initializes the group box control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.GroupPanel.Init">
            <summary>
            Initializes the group panel control.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ImageBox.Image">
            <summary>
            Gets or sets the image the control will display.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ImageBox.SizeMode">
            <summary>
            image and control dimensions are different sizes.
            Indicates how the image will be positioned and scaled when the
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ImageBox.SourceRect">
            <summary>
            Defines the region of the texture that is displayed in the image box control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ImageBox.image">
            <summary>
            Image the control will display.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ImageBox.sizeMode">
            <summary>
            and control dimensions are not the same.
            Indicates how the image will be positioned/scaled when image
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ImageBox.sourceRect">
            <summary>
            Defines the region of the texture that is displayed in the control.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.ImageBox.ImageChanged">
            <summary>
            Occurs when the control's image is changed.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ImageBox.Init">
            <summary>
            Initializes the image box control.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.ImageBox.SizeModeChanged">
            <summary>
            Occurs when the control's size mode is changed.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ImageBox.OnImageChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles when the control's image is changed.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ImageBox.OnSizeModeChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles when the control's size mode value is changed.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.InputMethods">
            <summary>
            Defines the input devices a Neoforce Application supports.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.MouseButton">
            <summary>
            Identifies a particular button on a mouse.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.GamePadButton">
            <summary>
            Identifies a particular button on an Xbox 360 gamepad.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.ActivePlayer">
            <summary>
            Identifies the index of the player who has input focus.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.GamePadVectors">
            <summary>
            Stores the thumb stick and trigger values of a gamepad.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.GamePadVectors.LeftStick">
            <summary>
            Left thumb stick axis values.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.GamePadVectors.LeftTrigger">
            <summary>
            Left trigger value.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.GamePadVectors.RightStick">
            <summary>
            Right thumb stick axis values.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.GamePadVectors.RightTrigger">
            <summary>
            Right trigger value.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.InputOffset">
            <summary>
            Defines the input offset and ratio to use when rescaling controls in the render target.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputOffset.RatioX">
            <summary>
            Target Width / Actual Screen Width.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputOffset.RatioY">
            <summary>
            Target Height / Actual Screen Height.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputOffset.X">
            <summary>
            Mouse position X offset.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputOffset.Y">
            <summary>
            Mouse position Y offset.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.InputOffset.#ctor(System.Int32,System.Int32,System.Single,System.Single)">
            <param name="ry">Y ratio.</param>
            <param name="rx">X ratio.</param>
            <param name="y">Mouse position Y offset.</param>
            <param name="x">Mouse position X offset.</param>
            <summary>
            Creates a new instance of the InputOffset class.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputSystem.RepeatDelay">
            <summary>
            will register a repeated press event when held down.
            Indicates how much delay (in ms) there will be before a key/button
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputSystem.RepeatRate">
            <summary>
            press events after the initial RepeatDelay timer has expired.
            Indicates how much delay (in ms) there will be between repeated key/button
            </summary>
        </member>
        <member name="P:MonoForce.Controls.InputSystem.ActivePlayer">
            <summary>
            Gets or sets the index of the player who has input focus.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.InputSystem.InputMethods">
            <summary>
            Sets or gets input methods allowed for navigation.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.InputSystem.InputOffset">
            <summary>
            Sets or gets input offset and ratio when rescaling controls in render target.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputSystem.ClickThreshold">
            <summary>
            an action.
            Indicates how far a thumbstick must be moved from center position to register
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputSystem.gamePadButtons">
            <summary>
            List to track the state and repeat timers of all gamepad buttons.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputSystem.keys">
            <summary>
            List to track the state and repeat timers of all keyboard keys.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputSystem.manager">
            <summary>
            Application's GUI manager.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputSystem.mouseButtons">
            <summary>
            List to track the state and repeat timers of all mouse buttons.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputSystem.activePlayer">
            <summary>
            Index of the player with input focus over the application.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputSystem.gamePadState">
            <summary>
            Current gamepad state.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputSystem.inputMethods">
            <summary>
            Specifies what input devices can be used to navigate the application's controls.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputSystem.inputOffset">
            <summary>
            Input offset and ratio to use when rescaling controls in the render target.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputSystem.mouseState">
            <summary>
            Current mouse state.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.InputSystem.#ctor(MonoForce.Controls.Manager,MonoForce.Controls.InputOffset)">
            <param name="offset">???</param>
            <param name="manager">Application's GUI manager.</param>
            <summary>
            Creates the Input System.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.InputSystem.GamePadDown">
            <summary>
            Occurs when a gamepad button enters the pressed state.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.InputSystem.GamePadMove">
            <summary>
            Occurs when the values of the gamepad thumb sticks change.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.InputSystem.GamePadPress">
            <summary>
            Occurs after a gamepad down event and occurs for repeat button press events.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.InputSystem.GamePadUp">
            <summary>
            Occurs when a gamepad button leaves the pressed state.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.InputSystem.Initialize">
            <summary>
            Initializes the input system.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.InputSystem.KeyDown">
            <summary>
            Occurs when a key enters the pressed state.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.InputSystem.KeyPress">
            <summary>
            Occurs after a key down event and also occurs for repeat key press events.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.InputSystem.KeyUp">
            <summary>
            Occurs when a key leaves the pressed state.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.InputSystem.MouseDown">
            <summary>
            Occurs when a mouse button enters the pressed state.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.InputSystem.MouseMove">
            <summary>
            Occurs when the mouse is moved.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.InputSystem.MousePress">
            <summary>
            Occurs after a mouse down event and occurs for repeat mouse press events.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.InputSystem.MouseScroll">
            <summary>
            Occurs when the mouse is scrolled.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.InputSystem.MouseUp">
            <summary>
            Occurs when a mouse button leaves the pressed state.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.InputSystem.SendGamePadState(Microsoft.Xna.Framework.PlayerIndex,Microsoft.Xna.Framework.Input.GamePadState,Microsoft.Xna.Framework.GameTime)">
            <param name="gameTime">Snapshot of the application's timing values.</param>
            <param name="state">Gamepad state to use to update the current gamepad state values.</param>
            <param name="playerIndex">PlayerIndex of the gamepad to update.</param>
            <summary>
            Updates the state of the specified gamepad using the supplied arguments.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.InputSystem.SendKeyboardState(Microsoft.Xna.Framework.Input.KeyboardState,Microsoft.Xna.Framework.GameTime)">
            <param name="gameTime">Snapshot of the application's timing values.</param>
            <param name="state">Keyboard state used to update the current state of the keyboard.</param>
            <summary>
            Updates the current keyboard state with the supplied arguments.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.InputSystem.SendMouseState(Microsoft.Xna.Framework.Input.MouseState,Microsoft.Xna.Framework.GameTime)">
            <param name="gameTime">Snapshot of the application's timing values.</param>
            <param name="state">Mouse state to use to update the current mouse state.</param>
            <summary>
            Updates the current mouse state using the supplied arguments.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.InputSystem.Update(Microsoft.Xna.Framework.GameTime)">
            <param name="gameTime">Snapshot of the application's timing values.</param>
            <summary>
            Updates the state of supported input devices.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.InputSystem.AdjustPosition(MonoForce.Controls.MouseEventArgs@)">
            <param name="e">Mouse event arguments.</param>
            <summary>
            Adjusts the position of the mouse cursor to keep it within the client region of the window.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.InputSystem.BuildGamePadEvent(Microsoft.Xna.Framework.Input.GamePadState,MonoForce.Controls.GamePadButton,MonoForce.Controls.GamePadEventArgs@)">
            <param name="e">GamePadEventArgs to update with the supplied values.</param>
            <param name="button">Gamepad button to assign to the event args.</param>
            <param name="state">Current gamepad state to grab stick and trigger values from.</param>
            <summary>
            Updates the GamePadEventArgs with the specified button, stick and trigger values.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.InputSystem.GetVectorState(MonoForce.Controls.GamePadButton,Microsoft.Xna.Framework.Input.GamePadState)" -->
        <member name="M:MonoForce.Controls.InputSystem.RecalcPosition(Microsoft.Xna.Framework.Point)">
            <returns>Returns the adjusted mouse position.</returns>
            <param name="pos">Original mouse position.</param>
            <summary>
            Adjusts the mouse position to account for rescaling on the render target.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.InputSystem.UpdateButtons(Microsoft.Xna.Framework.Input.MouseState,Microsoft.Xna.Framework.GameTime)">
            <param name="gameTime">Snapshot of the application's timing values.</param>
            <param name="state">Current state of the mouse device.</param>
            <summary>
            Updates the state of the Mouse buttons.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.InputSystem.UpdateGamePad(Microsoft.Xna.Framework.PlayerIndex,Microsoft.Xna.Framework.Input.GamePadState,Microsoft.Xna.Framework.GameTime)">
            <param name="gameTime">Snapshot of the application's timing values.</param>
            <param name="state">The new state to assign to the gamepad.</param>
            <param name="playerIndex">PlayerIndex of the gamepad to update the state of.</param>
            <summary>
            applicable gamepad events as needed.
            Updates the state of the gamepad with the specified player index and raises
            </summary>
        </member>
        <member name="M:MonoForce.Controls.InputSystem.UpdateKeys(Microsoft.Xna.Framework.Input.KeyboardState,Microsoft.Xna.Framework.GameTime)">
            <param name="gameTime">Snapshot of the application's timing values.</param>
            <param name="state">Current keyboard state.</param>
            <summary>
            Updates the state of the keys in the list.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.InputSystem.UpdateMouse(Microsoft.Xna.Framework.Input.MouseState,Microsoft.Xna.Framework.GameTime)">
            <param name="gameTime">Snapshot of the application's timing values.</param>
            <param name="state">Current mouse state.</param>
            <summary>
            Updates the mouse device.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.InputSystem.InputGamePadButton">
            <summary>
            Represents a gamepad button, its state, and repeat delay timer.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputSystem.InputGamePadButton.Button">
            <summary>
            Gamepad button this object represents.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputSystem.InputGamePadButton.Countdown">
            <summary>
            Timer used to delay firing of repeat key presses.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputSystem.InputGamePadButton.Pressed">
            <summary>
            Indicates if the key is pressed or released.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.InputSystem.InputGamePadButton.#ctor">
            <summary>
            Creates a default instance of the InputGamePadButton class.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.InputSystem.InputGamePadButton.#ctor(MonoForce.Controls.GamePadButton)">
            <param name="button">Button this instance will represent.</param>
            <summary>
            Creates an InputGamePadButton instance for the specified button.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.InputSystem.InputKey">
            <summary>
            Represents a key, its state, and repeat delay timer.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputSystem.InputKey.Countdown">
            <summary>
            Timer used to delay firing of repeat key presses.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputSystem.InputKey.Key">
            <summary>
            Key that this object represents.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputSystem.InputKey.Pressed">
            <summary>
            Indicates if the key is pressed or released.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.InputSystem.InputMouse">
            <summary>
            Represents the state of the mouse device and the current mouse cursor position.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputSystem.InputMouse.Position">
            <summary>
            Current mouse cursor position.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputSystem.InputMouse.State">
            <summary>
            Current mouse state.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.InputSystem.InputMouseButton">
            <summary>
            Represents a mouse button, its state, and repeat delay timer.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputSystem.InputMouseButton.Button">
            <summary>
            The mouse button this object represents.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputSystem.InputMouseButton.Countdown">
            <summary>
            Timer used to delay firing of repeat key presses.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.InputSystem.InputMouseButton.Pressed">
            <summary>
            Indicates if the key is pressed or released.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.InputSystem.InputMouseButton.#ctor">
            <summary>
            Creates a default instance of the InputMouseButton class.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.InputSystem.InputMouseButton.#ctor(MonoForce.Controls.MouseButton)">
            <param name="button">Mouse button this instance will represent.</param>
            <summary>
            Creates an instance of the InputMouseButton class set for the specified mouse button.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.KeyboardLayout">
            <summary>
            string representations.
            Microsoft.Xna.Framework.Input.Keys values to their proper
            Represents the layout of an English keyboard and helps to map
            </summary>
        </member>
        <member name="P:MonoForce.Controls.KeyboardLayout.Name">
            <summary>
            Gets or sets the name of the keyboard layout.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.KeyboardLayout.LayoutList">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:MonoForce.Controls.KeyboardLayout.name">
            <summary>
            Defines the type of keyboard layout.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.KeyboardLayout.#ctor">
            <summary>
            Creates a new English KeyboardLayout object.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.KeyboardLayout.GetKey(MonoForce.Controls.KeyEventArgs)">
            <returns>Returns the pressed key as a string.</returns>
            <param name="args">KeyEventArgs object to retrieve the key value from.</param>
            <summary>
            Gets the key value from a KeyEventArgs object case-adjusted based on modifiers.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.KeyboardLayout.KeyToString(MonoForce.Controls.KeyEventArgs)">
            <returns>Returns the mapped Keys value as a string.</returns>
            <param name="args">KeyEventArgs to get the key value from.</param>
            <summary>
            Maps Keys objects to their respective keys.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.CzechKeyboardLayout.#ctor">
            <summary>
            Creates a new instance of the CzechKeyboardLayout class.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.CzechKeyboardLayout.KeyToString(MonoForce.Controls.KeyEventArgs)">
            <returns>Returns the mapped Keys value as a string.</returns>
            <param name="args">KeyEventArgs to get the key value from.</param>
            <summary>
            Maps Keys objects to their respective keys.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.GermanKeyboardLayout">
            <summary>
            string representations.
            Microsoft.Xna.Framework.Input.Keys values to their proper
            Represents the layout of a German keyboard and helps to map
            </summary>
        </member>
        <member name="M:MonoForce.Controls.GermanKeyboardLayout.#ctor">
            <summary>
            Creates a new instance of the GermanKeyboardLayout class.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.GermanKeyboardLayout.KeyToString(MonoForce.Controls.KeyEventArgs)">
            <returns>Returns the mapped Keys value as a string.</returns>
            <param name="args">KeyEventArgs to get the key value from.</param>
            <summary>
            Maps Keys objects to their respective keys.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.PolishKeyboardLayout.#ctor">
            <summary>
            Creates a new instance of the PolishKeyboardLayout class.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.PolishKeyboardLayout.KeyToString(MonoForce.Controls.KeyEventArgs)">
            <returns>Returns the mapped Keys value as a string.</returns>
            <param name="args">KeyEventArgs to get the key value from.</param>
            <summary>
            Maps Keys objects to their respective keys.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Label.Alignment">
            <summary>
            Indicates how the label's text is aligned.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Label.Ellipsis">
            <summary>
            Indicates if the label's text should be truncated with "..." if it's too large.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Label.alignment">
            <summary>
            Indicates how the label's text is aligned.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Label.ellipsis">
            <summary>
            Indicates if the text should be truncated with "..."
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Label.Bold" -->
        <member name="P:MonoForce.Controls.Label.Shadow">
            <summary>
            Indicates if a shadow should be rendered.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Label.Font" -->
        <member name="M:MonoForce.Controls.Label.Init">
            <summary>
            Initializes the label control.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Label.InitSkin" -->
        <!-- Badly formed XML comment ignored for member "T:MonoForce.Controls.FontSize" -->
        <member name="T:MonoForce.Controls.Layout">
            <summary>
            Provides methods for loading Neoforce controls from XML files.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Layout.Load(MonoForce.Controls.Manager,System.String)">
            <returns>Returns the root control of the layout file with all child controls initialized.</returns>
            <param name="asset">Name of the layout XML asset. (Default asset names are file names without extensions.)</param>
            <param name="manager">GUI manager responsible for the controls contained in the layout XML file.</param>
            <summary>
            Reads the specified layout XML file asset.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Layout.LoadControl(MonoForce.Controls.Manager,System.Xml.XmlNode,System.Type,MonoForce.Controls.Control)">
            <returns>Returns the created Control.</returns>
            <param name="parent">Parent control of the control about to be loaded.</param>
            <param name="type">Type of control specified in XML.</param>
            <param name="node">Control XML node.</param>
            <param name="manager">GUI manager for the control to load.</param>
            <summary>
            Loads a control from a layout XML file.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Layout.LoadProperties(System.Xml.XmlNodeList,MonoForce.Controls.Control)">
            <param name="c">Control to apply the property values to.</param>
            <param name="node">Current XML node list.</param>
            <summary>
            Loads all properties defined in a layout XML file.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.LinkLabel">
            <summary>
            A label that opens a link when clicked.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.LinkLabel.URL">
            <summary>
            The URL or process to run.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.LinkLabel.HoverColor">
            <summary>
            Color to fade to on hover.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.LinkLabel.InitSkin">
            <summary>
            Initializes the skin of the track bar control.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.ListBox">
            <summary>
            Represents a list box control. Single selection only.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ListBox.HideSelection">
            <summary>
            Indicates if the selection overlay should be drawn over the selected item.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ListBox.HotTrack">
            <summary>
            Indicates if mouse over event can update the selected index.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ListBox.ItemIndex">
            <summary>
            Gets or sets the index of the selected list box item.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ListBox.Items">
            <summary>
            Gets the list of items.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ListBox.#ctor(MonoForce.Controls.Manager)">
            <param name="manager">GUI manager for the control.</param>
            <summary>
            Creates a new ListBox control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ListBox.AutoHeight(System.Int32)">
            <param name="maxItems">Number of items that can be displayed without needing a scroll bar.</param>
            <summary>
            displayed in it without needing a scroll bar.
            Sizes the list pane so the specified number of items will be able to be
            </summary>
        </member>
        <member name="E:MonoForce.Controls.ListBox.HideSelectionChanged">
            <summary>
            Occurs when the hide selection value changes.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.ListBox.HotTrackChanged">
            <summary>
            Occurs when the hot tracking value changes.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ListBox.Init">
            <summary>
            Initializes the list box control.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.ListBox.ItemIndexChanged">
            <summary>
            Occurs when the selected item index changes.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ListBox.ScrollTo(System.Int32)">
            <param name="index">Index to scroll to.</param>
            <summary>
            specified list item is visible in the list box.
            Adjusts the scroll bar value to make sure the
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ListBox.Update(Microsoft.Xna.Framework.GameTime)">
            <param name="gameTime">Snapshot of the application's timing values.</param>
            <summary>
            Updates the state of the list box and watches for changes in list size.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ListBox.OnGamePadPress(MonoForce.Controls.GamePadEventArgs)">
            <param name="e"></param>
            <summary>
            Handles gamepad button presses for the list box. Specifically, the up and down buttons.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ListBox.OnHideSelectionChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Raises the HideSelectionChanged event.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ListBox.OnHotTrackChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Raises the HotTrackChanged event.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ListBox.OnItemIndexChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Raises the ItemIndexChangedEvent.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ListBox.OnKeyPress(MonoForce.Controls.KeyEventArgs)">
            <param name="e"></param>
            <summary>
            Handles key press events for the list box.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ListBox.OnMouseDown(MonoForce.Controls.MouseEventArgs)">
            <param name="e"></param>
            <summary>
            Handles mouse button down events for the list box.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ListBox.OnMouseMove(MonoForce.Controls.MouseEventArgs)">
            <param name="e"></param>
            <summary>
            Handles mouse move events for the list box.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ListBox.OnMouseScroll(MonoForce.Controls.MouseEventArgs)">
            <param name="e"></param>
            <summary>
            Handles mouse scroll events for the list box.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ListBox.OnResize(MonoForce.Controls.ResizeEventArgs)">
            <param name="e"></param>
            <summary>
            Handles resizing of the list box.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ListBox.TrackItem(System.Int32,System.Int32)">
            <param name="y">Mouse Y position.</param>
            <param name="x">Mouse X position.</param>
            <summary>
            Updates the list box selection when the mouse moves over one.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.MainMenu.lastIndex">
            <summary>
            Last selected menu entry index.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.MainMenu.rs">
            <summary>
            Array of rectangles.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.MainMenu.HideMenu">
            <summary>
            Hides the menu and any visible child menus.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.MainMenu.Init">
            <summary>
            Initializes the main menu.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.MainMenu.InitSkin">
            <summary>
            Initializes the skin for the main menu.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.MainMenu.Dispose(System.Boolean)">
            <param name="disposing"></param>
            <summary>
            Cleans up after the main menu.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.MainMenu.OnClick(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles mouse button click events for the main menu.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.MainMenu.OnFocusGained(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles focus gained events for the main menu.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.MainMenu.OnFocusLost(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles focus lost events for the main menu control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.MainMenu.OnGamePadPress(MonoForce.Controls.GamePadEventArgs)">
            <param name="e"></param>
            <summary>
            Handles game pad button press events for the main menu.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.MainMenu.OnKeyPress(MonoForce.Controls.KeyEventArgs)">
            <param name="e"></param>
            <summary>
            Handles arrow key press events for the main menu.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.MainMenu.OnMouseDown(MonoForce.Controls.MouseEventArgs)">
            <param name="e"></param>
            <summary>
            Handles mouse button down events for the main menu.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.MainMenu.OnMouseMove(MonoForce.Controls.MouseEventArgs)">
            <param name="e"></param>
            <summary>
            Handles mouse move events for the main menu.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.MainMenu.OnMouseOut(MonoForce.Controls.MouseEventArgs)">
            <param name="e"></param>
            <summary>
            Handles mouse out events for the main menu.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.MainMenu.CheckArea(System.Int32,System.Int32)">
            <returns>Returns true.</returns>
            <param name="y">Y position to check.</param>
            <param name="x">X position to check.</param>
            <summary>
            Checks to see if the specified position is within the bounds of the menu or a child menu. ???
            </summary>
        </member>
        <member name="M:MonoForce.Controls.MainMenu.HideSubMenu">
            <summary>
            Hides the currently visible child menu.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.MainMenu.TrackItem(System.Int32,System.Int32)">
            <param name="y">Y position to check.</param>
            <param name="x">X position to check.</param>
            <summary>
            Highlights the menu item under the specified position.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.Manager">
            <summary>
            Manages rendering of all controls.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager._DefaultSkin">
            <summary>
            Name of the default skin file asset.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager._DoubleClickTime">
            <summary>
            will be interpreted as a double click event.
            Maximum delay between two click events. Two clicks occuring within this limit
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager._LayoutDirectory">
            <summary>
            Directory in the content project where the manager expects to find layout files.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager._MenuDelay">
            <summary>
            Amount of milliseconds to delay the initial display of menus.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager._RenderTargetUsage">
            <summary>
            Indicates how the manager's render target data is used when a new render target is set.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager._SkinDirectory">
            <summary>
            Directory in the content project where the manager expects to find skin files.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager._SkinExtension">
            <summary>
            Extension of valid skin file archives.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager._TextureResizeIncrement">
            <summary>
            Increment at which a texture can be resized.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager._ToolTipDelay">
            <summary>
            tip is displayed.
            Amount of milliseconds the mouse cursor has to hover a control before its tool
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.AutoCreateRenderTarget">
            <summary>
            Gets or sets a value indicating whether the Manager should create render target automatically.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.AutoUnfocus">
            <summary>
            Gets or sets a value indicating if a control should unfocus if you click outside on the screen.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.Components">
            <summary>
            Returns list of components added to the manager.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.Content">
            <summary>
            Returns
            <see cref="T:MonoForce.Controls.ArchiveManager" />
            used for loading assets.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.Controls">
            <summary>
            Returns list of controls added to the manager.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.Disposing">
            <summary>
            Gets a value indicating whether Manager is in the process of disposing.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.DoubleClickTime">
            <summary>
            Gets or sets the maximum number of milliseconds that can elapse between a first click and a second click to consider the mouse action a double-click.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.FocusedControl">
            <summary>
            Gets or sets the currently focused control.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.Game">
            <summary>
            Returns associated
            <see cref="P:MonoForce.Controls.Manager.Game" />
            component.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.GlobalDepth">
            <summary>
            Gets or sets the depth value used for rendering sprites.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.Graphics">
            <summary>
            Returns associated
            <see cref="T:Microsoft.Xna.Framework.GraphicsDeviceManager" />
            .
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.GraphicsDevice">
            <summary>
            Returns associated
            <see cref="P:MonoForce.Controls.Manager.GraphicsDevice" />
            .
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.Input">
            <summary>
            Returns
            <see cref="T:MonoForce.Controls.InputSystem" />
            instance responsible for managing user input.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.InputEnabled">
            <summary>
            Enables or disables input processing.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.KeyboardLayout">
            <summary>
            Gets or sets current keyboard layout for proper text inputs.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.KeyboardLayouts">
            <summary>
            Gets or sets collection of active keyboard layouts.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.LayoutDirectory">
            <summary>
            Gets or sets the directory where layout files are located.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.LogUnhandledExceptions">
            <summary>
            Enables or disables logging of unhandled exceptions.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.MenuDelay">
            <summary>
            Gets or sets the time that passes before a submenu appears when hovered over menu item.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.ModalWindow">
            <summary>
            Gets or sets the currently active modal window.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.Renderer">
            <summary>
            Returns
            <see cref="P:MonoForce.Controls.Manager.Renderer" />
            used for rendering controls.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.RenderTarget">
            <summary>
            Gets or sets render target for drawing.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.ScreenHeight">
            <summary>
            Gets current height of the screen in pixels.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.ScreenWidth">
            <summary>
            Gets current width of the screen in pixels.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.Skin">
            <summary>
            Gets or sets the skin applied to all controls.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.SkinDirectory">
            <summary>
            Gets or sets the directory where skin files are located.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.SkinExtension">
            <summary>
            Gets or sets file extension for archived skin files.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.TargetFrames">
            <summary>
            Gets or sets update interval for drawing, logic and input.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.TargetHeight">
            <summary>
            Gets height of the selected render target in pixels.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.TargetWidth">
            <summary>
            Gets width of the selected render target in pixels.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.TextureResizeIncrement">
            <summary>
            Gets or sets texture size increment in pixel while performing controls resizing.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.ToolTipDelay">
            <summary>
            Gets or sets the time that passes before the
            <see cref="T:MonoForce.Controls.ToolTip" />
            appears.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.ToolTipsEnabled">
            <summary>
            Enables or disables showing of tooltips globally.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.UseGuide">
            <summary>
            Gets or sets a value indicating if Guide component can be used
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Manager.OrderList">
            <summary>
            Gets the list of visible controls being managed.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.components">
            <summary>
            List of all components being managed.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.controls">
            <summary>
            List of all controls being managed.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.graphics">
            <summary>
            Graphics device manager for the application.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.orderList">
            <summary>
            List of visible controls in the controls list.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager._LayoutVersion">
            <summary>
            Layout file version the manager expects to work with.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager._SkinVersion">
            <summary>
            Skin version the manager expects to work with.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.autoCreateRenderTarget">
            <summary>
            Indicates if the manager's render target should be created automatically when initialized.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.autoUnfocus">
            <summary>
            Indicates if controls automatically unfocus when a new control is navigated to. ???
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.content">
            <summary>
            Archive content manager for loading skin files.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.cursor">
            <summary>
            Application's cursor used when running on Windows.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.deviceReset">
            <summary>
            Indicates if the graphics device has been reset.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.disposing">
            <summary>
            Indicates if the manager is being disposed.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.doubleClickTime">
            <summary>
            Indicates how fast two click events must occur to trigger a double click event.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.drawTime">
            <summary>
            Tracks elapsed time to control drawing to match target FPS.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.focusedControl">
            <summary>
            Application control that currently has input focus.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.globalDepth">
            <summary>
            Global depth value used when drawing controls.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.input">
            <summary>
            Handles input device updates for the application.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.inputEnabled">
            <summary>
            Indicates if the manager is responding to user input.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.keyboardLayout">
            <summary>
            Active keyboard layout.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.keyboardLayouts">
            <summary>
            List of keyboard layouts available for the application.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.layoutDirectory">
            <summary>
            Directory where layout files are located.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.logUnhandledExceptions">
            <summary>
            Indicates if unhandled exceptions should be logged to file.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.menuDelay">
            <summary>
            Indicates how long the display of a menu is delayed.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.modalWindow">
            <summary>
            Current modal window displayed, if any.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.renderer">
            <summary>
            Render manager for the application.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.renderTarget">
            <summary>
            Render target where control drawing takes place before being displayed.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.skin">
            <summary>
            Current skin being applied to the application controls.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.skinDirectory">
            <summary>
            Directory where skin files are located.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.skinExtension">
            <summary>
            Extension of skin files.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.skinName">
            <summary>
            Name of the skin file being used.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.states">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.targetFrames">
            <summary>
            Application's target FPS.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.textureResizeIncrement">
            <summary>
            Increment which textures can be resized at.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.toolTipDelay">
            <summary>
            Indicates how long a mouse has to hover a control in order to activate its tool tip.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.toolTipsEnabled">
            <summary>
            Indicates if the application can use tool tips.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.updateTime">
            <summary>
            Tracks elapsed time to control frequency of updates.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.useGuide">
            <summary>
            Indicates if the guide component can be used.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Manager.#ctor(Microsoft.Xna.Framework.Game,Microsoft.Xna.Framework.GraphicsDeviceManager,System.String)" -->
        <member name="M:MonoForce.Controls.Manager.#ctor(Microsoft.Xna.Framework.Game,System.String)">
            <param name="skin">The name of the skin being loaded at the start.</param>
            <param name="game">The Game class.</param>
            <summary>
            Initializes a new instance of the Manager class.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.#ctor(Microsoft.Xna.Framework.Game,Microsoft.Xna.Framework.GraphicsDeviceManager)">
            <param name="graphics">The GraphicsDeviceManager class provided by the Game class.</param>
            <param name="game">The Game class.</param>
            <summary>
            Initializes a new instance of the Manager class, loads the default skin and registers manager in the game class automatically.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.#ctor(Microsoft.Xna.Framework.Game)">
            <param name="game">The Game class.</param>
            <summary>
            Initializes a new instance of the Manager class, loads the default skin and registers manager in the game class automatically.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Manager.Add(MonoForce.Controls.Component)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Manager.BeginDraw(Microsoft.Xna.Framework.GameTime)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Manager.BringToFront(MonoForce.Controls.Control)" -->
        <member name="M:MonoForce.Controls.Manager.CreateRenderTarget">
            <returns>Returns the created render target.</returns>
            <summary>
            Creates a render target.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.CreateRenderTarget(System.Int32,System.Int32)">
            <returns>Returns the created render target.</returns>
            <param name="height">Height of the new render target.</param>
            <param name="width">Width of the new render target.</param>
            <summary>
            Creates a render target with the specified dimensions.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.Manager.DeviceSettingsChanged">
            <summary>
            Occurs when the GraphicsDevice settings are changed.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.Draw(Microsoft.Xna.Framework.GameTime)">
            <param name="gameTime">Snapshot of the application's timing values.</param>
            <summary>
            Draws the manager's controls.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.EndDraw">
            <summary>
            Draws texture resolved from RenderTarget used for rendering.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.EndDraw(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws texture resolved from RenderTarget to specified rectangle.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.GetControl(System.String)">
            <returns>Returns the control with the specified name.</returns>
            <param name="name">Name of the control to retrieve.</param>
            <summary>
            Gets the control with the specified name.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.Initialize">
            <summary>
            Initializes the control manager.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.LogException(System.Exception)">
            <param name="e">The exception to log.</param>
            <summary>
            Logs exceptions to files on Windows.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.Prepare(Microsoft.Xna.Framework.GameTime)">
            <param name="gameTime">Snapshot of the application's timing values.</param>
            <summary>
            Draws the controls on their respective render targets.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Manager.Remove(MonoForce.Controls.Component)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Manager.SendToBack(MonoForce.Controls.Control)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Manager.SetSkin(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Manager.SetSkin(MonoForce.Controls.Skin)" -->
        <member name="E:MonoForce.Controls.Manager.SkinChanged">
            <summary>
            Occurs when the skin changes.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.Manager.SkinChanging">
            <summary>
            Occurs when the skin is about to change.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Manager.Update(Microsoft.Xna.Framework.GameTime)" -->
        <member name="E:MonoForce.Controls.Manager.WindowClosing">
            <summary>
            Occurs when game window is about to close.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.Dispose(System.Boolean)">
            <param name="disposing"></param>
            <summary>
            Releases resources used by the manager.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.PrepareGraphicsDevice(System.Object,Microsoft.Xna.Framework.PreparingDeviceSettingsEventArgs)">
            <summary>
            Method used as an event handler for the GraphicsDeviceManager.PreparingDeviceSettings event.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.CheckButtons(System.Int32)">
            <returns></returns>
            <param name="index"></param>
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.CheckDetached(MonoForce.Controls.Control)">
            <returns></returns>
            <param name="control"></param>
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.CheckOrder(MonoForce.Controls.Control,Microsoft.Xna.Framework.Point)">
            <returns></returns>
            <param name="pos"></param>
            <param name="control"></param>
            <summary>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Manager.CheckParent(MonoForce.Controls.Control,Microsoft.Xna.Framework.Point)" -->
        <member name="M:MonoForce.Controls.Manager.CheckState(MonoForce.Controls.Control)">
            <returns></returns>
            <param name="control"></param>
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.GamePadDownProcess(System.Object,MonoForce.Controls.GamePadEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles gamepad button down events for the manager.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.GamePadPressProcess(System.Object,MonoForce.Controls.GamePadEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles gamepad button presses for the manager.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.GamePadUpProcess(System.Object,MonoForce.Controls.GamePadEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles gamepad button up events for the manager.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.GraphicsDevice_DeviceReset(System.Object,System.EventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Recreates the render target when the graphics device is reset.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.HandleUnhadledExceptions(System.Object,System.UnhandledExceptionEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles unhandled exceptions.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.InitControls">
            <summary>
            Initializes every single control created.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.InitSkins">
            <summary>
            Initializes the skin of every single control created.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.KeyDownProcess(System.Object,MonoForce.Controls.KeyEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles key down events for the manager.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.KeyPressProcess(System.Object,MonoForce.Controls.KeyEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles key press events for the manager.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.KeyUpProcess(System.Object,MonoForce.Controls.KeyEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles key up events for the manager.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.MouseDownProcess(System.Object,MonoForce.Controls.MouseEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Processes mouse button down events for the manager.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.MouseMoveProcess(System.Object,MonoForce.Controls.MouseEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Processes mouse move events for the manager.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.MousePressProcess(System.Object,MonoForce.Controls.MouseEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Processes mouse button press events for the manager.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.MouseScrollProcess(System.Object,MonoForce.Controls.MouseEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Processes mouse scroll events for the manager.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.MouseUpProcess(System.Object,MonoForce.Controls.MouseEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Processes mouse button up events for the manager.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.ProcessArrows(MonoForce.Controls.Control,MonoForce.Controls.KeyEventArgs,MonoForce.Controls.GamePadEventArgs)">
            <param name="gpe">Gamepad event arguments.</param>
            <param name="kbe">Key event arguments.</param>
            <param name="control">Control to process arrow keys for.</param>
            <summary>
            Processes up/down/left/right inputs for the manager.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.SetMaxSize(MonoForce.Controls.Control,System.Int32,System.Int32)">
            <param name="h">Maximum height of the control.</param>
            <param name="w">Maximum width of the control.</param>
            <param name="c">Control to check the dimensions of.</param>
            <summary>
            dimensions and resizes it if necessary.
            Makes sure the specified control does not exceed the specified
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.SortLevel(MonoForce.Controls.ControlsList)">
            <param name="cs"></param>
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.TabNextControl(MonoForce.Controls.Control)">
            <param name="control">Current control we are tabbing from.</param>
            <summary>
            Tabs to the next control in the list.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Manager.TabPrevControl(MonoForce.Controls.Control)">
            <param name="control">Current control we are tabbing from.</param>
            <summary>
            Tabs to the previous control in the list.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.Manager.ControlStates">
            <summary>
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.ControlStates.Buttons">
            <summary>
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.ControlStates.Click">
            <summary>
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Manager.ControlStates.Over">
            <summary>
            </summary>
        </member>
        <member name="F:MonoForce.Controls.MenuItem.Enabled">
            <summary>
            Indicates if the menu item is able to be selected or not.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.MenuItem.Image">
            <summary>
            Image to display to the left of the menu item.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.MenuItem.Items">
            <summary>
            List of child menu items belonging to this menu item.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.MenuItem.Separated">
            <summary>
            Indicates if the menu item appears after a menu separator. ???
            </summary>
        </member>
        <member name="F:MonoForce.Controls.MenuItem.Text">
            <summary>
            Text to display for this menu item.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.MenuItem.#ctor">
            <summary>
            Creates a new default menu item.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.MenuItem.Click">
            <summary>
            Occurs when the menu item is clicked.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.MenuItem.Selected">
            <summary>
            Occurs when the menu item is selected.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.MenuItem.ClickInvoke(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Raises the menu item click event.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.MenuItem.SelectedInvoke(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Raises the menu item selected event.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.MenuBase.Items">
            <summary>
            Gets the list of menu items that make up the menu.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.MenuBase.ChildMenu">
            <summary>
            Gets or sets the menu's child menu.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.MenuBase.ItemIndex">
            <summary>
            Gets or sets the menu's selected menu item index.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.MenuBase.ParentMenu">
            <summary>
            Gets or sets the menu's parent menu.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.MenuBase.RootMenu">
            <summary>
            Gets or sets the menu's root menu.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.MenuBase.items">
            <summary>
            List of menu items composing the menu.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.MenuBase.childMenu">
            <summary>
            Child menu of this menu.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.MenuBase.itemIndex">
            <summary>
            Selected menu item index.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.MenuBase.parentMenu">
            <summary>
            Parent menu of this menu.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.MenuBase.rootMenu">
            <summary>
            Root menu of this menu.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.MessageBox">
            <summary>
            A message box with different button styles.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ModalContainer.IsModal">
            <summary>
            Indicates if the container is modal or not.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ModalContainer.ModalResult">
            <summary>
            which button of the dialog was pressed.)
            Gets or sets the result of the modal dialog. (Usually indicating
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ModalContainer.Visible">
            <summary>
            Indicates if the modal container is visible or not.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ModalContainer.lastModal">
            <summary>
            Parent modal control, if there is any.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ModalContainer.modalResult">
            <summary>
            Indicates the result of the modal dialog.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ModalContainer.Close">
            <summary>
            Closes the modal dialog.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ModalContainer.Close(MonoForce.Controls.ModalResult)">
            <param name="modalResult">Dialog result to close the window with.</param>
            <summary>
            Closes the modal dialog with the specified result.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.ModalContainer.Closed">
            <summary>
            Occurs when the dialog has finished closing.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.ModalContainer.Closing">
            <summary>
            Occurs when the dialog is beginning to close.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ModalContainer.ShowModal">
            <summary>
            Shows the control as a modal dialog.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ModalContainer.OnClosed(MonoForce.Controls.WindowClosedEventArgs)">
            <param name="e"></param>
            <summary>
            Handles the closed event of the modal container.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ModalContainer.OnClosing(MonoForce.Controls.WindowClosingEventArgs)">
            <param name="e"></param>
            <summary>
            Handles the closing of the modal container control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ModalContainer.Input_GamePadDown(System.Object,MonoForce.Controls.GamePadEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles gamepad button down events for the modal container.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ModalContainer.Input_KeyDown(System.Object,MonoForce.Controls.KeyEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles key press events for the modal container.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Panel.BevelBorder">
            <summary>
            Get or set which side(s) of the panel will have a beveled edge.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Panel.BevelColor">
            <summary>
            Gets or sets the color of the panel's beveled edges.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Panel.BevelMargin">
            <summary>
            Gets or sets the margin amount between the bevel and the panel's content area.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Panel.BevelStyle">
            <summary>
            Gets or sets the style of beveled edge to use when drawing the panel border.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Panel.bevel">
            <summary>
            Describes the edges of the panel.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Panel.bevelBorder">
            <summary>
            Specifies which side(s) of the panel container will be drawn with a beveled edge.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Panel.bevelColor">
            <summary>
            Color of the panel's bevel.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Panel.bevelMargin">
            <summary>
            Margin between the beveled edge and the panel's content area. ???
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Panel.bevelStyle">
            <summary>
            Describes the style of beveled edge to apply when drawing.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.Panel.BevelBorderChanged">
            <summary>
            Occurs when the panel's bevel border style has changed.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.Panel.BevelMarginChanged">
            <summary>
            Occurs when the panel's bevel margin has changed.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.Panel.BevelStyleChanged">
            <summary>
            Occurs when the panel's bevel styl has changed.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Panel.Init">
            <summary>
            Initializes the Panel control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Panel.InitSkin">
            <summary>
            Initializes the skin of the panel control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Panel.AdjustMargins">
            <summary>
            Updates the client area margins of the panel based on style, borders, and skin settings.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Panel.OnBevelBorderChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles bevel border changes for the panel.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Panel.OnBevelMarginChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles bevel margin changes for the panel.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Panel.OnBevelStyleChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles bevel style changes for the panel.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.RadioButtonMode">
            <summary>
            Indicates how other radio buttons are updated when a radio button is clicked.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.RadioButtonMode.Auto">
            <summary>
            Clicked radio button will update the checked state of other radio buttons.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.RadioButtonMode.Manual">
            <summary>
            Updating the check state of other radio buttons is a task left to the user.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.RadioButton.skRadioButton">
            <summary>
            String used to access the RadioButton's skin control.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.RadioButton.Mode">
            <summary>
            Gets or sets the way the radio button handles updating other radio button control check states when it is clicked.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.RadioButton.mode">
            <summary>
            Indicates if the control will update the check state of other radio button clicks when it's clicked.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.RadioButton.Init">
            <summary>
            Initializes the radio button control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.RadioButton.InitSkin">
            <summary>
            Initializes the skin of the radio button control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.RadioButton.OnClick(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles radio button mouse click events.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.BlendingMode">
            <summary>
            Specifies the blend mode that will be used when the renderer draws objects.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.BlendingMode.Default">
            <summary>
            The renderer will draw with the default blend settings.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.BlendingMode.None">
            <summary>
            The renderer will draw in overwrite mode.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.DeviceStates">
            <summary>
            Contains state information for the GraphicsDevice.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.DeviceStates.BlendState">
            <summary>
            Graphics device blend state information.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.DeviceStates.DepthStencilState">
            <summary>
            Graphics device depth stencil state.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.DeviceStates.RasterizerState">
            <summary>
            Indicates how the graphics device converts vector data into raster data.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.DeviceStates.SamplerState">
            <summary>
            Indicates how the graphics device samples texture data.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.DeviceStates.#ctor">
            <summary>
            </summary>
        </member>
        <member name="T:MonoForce.Controls.Renderer">
            <summary>
            Provides methods for drawing control layers and strings.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Renderer.SpriteBatch">
            <summary>
            Accesses the renderer's sprite batch object.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Renderer.states">
            <summary>
            Various graphics device settings for the renderer.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Renderer.sb">
            <summary>
            Sprite batch object used for drawing.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Renderer.#ctor(MonoForce.Controls.Manager)">
            <param name="manager">GUI manager for creating the sprite batch.</param>
            <summary>
            Creates a new renderer.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Renderer.GetDestinationArea(Microsoft.Xna.Framework.Rectangle,MonoForce.Controls.Margins,MonoForce.Controls.Alignment)">
            <returns>The region where the partial source piece should be drawn.</returns>
            <param name="alignment">Which piece of the asset is this?</param>
            <param name="margins">Margin values applied to the region.</param>
            <param name="area">Entire destination region where the image should be drawn.</param>
            <summary>
            Calculates the correct piece of the destination region where the partial source area should be drawn.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Renderer.Begin(MonoForce.Controls.BlendingMode)" -->
        <member name="M:MonoForce.Controls.Renderer.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color)">
            <param name="color">Color tint to apply to the image.</param>
            <param name="destination">Destination region where the image will be drawn.</param>
            <param name="texture">Image to draw.</param>
            <summary>
            Draws the texture in the specified region.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Renderer.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Int32,Microsoft.Xna.Framework.Color)">
            <param name="color">Color tint to apply to the image.</param>
            <param name="top">Destination Y position.</param>
            <param name="left">Destination X position.</param>
            <param name="texture">Image to draw.</param>
            <summary>
            Draws the texture at the specified location.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Renderer.DrawGlyph(MonoForce.Controls.Glyph,Microsoft.Xna.Framework.Rectangle)">
            <param name="rect">Destination region where the glyph will be drawn.</param>
            <param name="glyph">Glyph to draw.</param>
            <summary>
            Draws a glyph. (An image on a control.)
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Renderer.DrawLayer(MonoForce.Controls.SkinLayer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,System.Int32)">
            <param name="index">Index of the skin layer state to draw.</param>
            <param name="color">Color tint to apply to the skin layer.</param>
            <param name="rect">Destination region where the layer will be drawn.</param>
            <param name="layer">Skin layer to draw.</param>
            <summary>
            Draws a skin layer in the specified region.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Renderer.DrawLayer(MonoForce.Controls.Control,MonoForce.Controls.SkinLayer,Microsoft.Xna.Framework.Rectangle)">
            <param name="rect">Destination region where the control layer will be drawn.</param>
            <param name="layer">Skin layer of the control to draw.</param>
            <param name="control">Control to draw the layer of.</param>
            <summary>
            Draws the specified layer of the control in the defined region.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Renderer.DrawLayer(MonoForce.Controls.Control,MonoForce.Controls.SkinLayer,Microsoft.Xna.Framework.Rectangle,MonoForce.Controls.ControlState)">
            <param name="state">Control state to apply to the layer.</param>
            <param name="rect">Destination region where the control layer will be drawn.</param>
            <param name="layer">Skin layer of the control to draw.</param>
            <param name="control">Control to draw the layer of.</param>
            <summary>
            Draws the specified layer of the control in the defined region.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Renderer.DrawString(Microsoft.Xna.Framework.Graphics.SpriteFont,System.String,System.Single,System.Single,Microsoft.Xna.Framework.Color,System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Renderer.DrawString(Microsoft.Xna.Framework.Graphics.SpriteFont,System.String,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,MonoForce.Controls.Alignment,System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Renderer.DrawString(Microsoft.Xna.Framework.Graphics.SpriteFont,System.String,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,MonoForce.Controls.Alignment,System.Boolean,System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Renderer.DrawString(MonoForce.Controls.Control,MonoForce.Controls.SkinLayer,System.String,Microsoft.Xna.Framework.Rectangle,System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Renderer.DrawString(MonoForce.Controls.Control,MonoForce.Controls.SkinLayer,System.String,Microsoft.Xna.Framework.Rectangle,MonoForce.Controls.ControlState,System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Renderer.DrawString(MonoForce.Controls.Control,MonoForce.Controls.SkinLayer,System.String,Microsoft.Xna.Framework.Rectangle,System.Boolean,System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Renderer.DrawString(MonoForce.Controls.Control,MonoForce.Controls.SkinLayer,System.String,Microsoft.Xna.Framework.Rectangle,MonoForce.Controls.ControlState,System.Boolean,System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Renderer.DrawString(MonoForce.Controls.Control,MonoForce.Controls.SkinLayer,System.String,Microsoft.Xna.Framework.Rectangle,System.Boolean,System.Int32,System.Int32,System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Renderer.DrawString(MonoForce.Controls.Control,MonoForce.Controls.SkinLayer,System.String,Microsoft.Xna.Framework.Rectangle,MonoForce.Controls.ControlState,System.Boolean,System.Int32,System.Int32,System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Renderer.DrawString(MonoForce.Controls.Control,MonoForce.Controls.SkinLayer,System.String,Microsoft.Xna.Framework.Rectangle,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Renderer.DrawString(MonoForce.Controls.Control,MonoForce.Controls.SkinLayer,System.String,Microsoft.Xna.Framework.Rectangle,MonoForce.Controls.ControlState,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:MonoForce.Controls.Renderer.DrawString(Microsoft.Xna.Framework.Graphics.SpriteFont,System.String,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,MonoForce.Controls.Alignment,System.Int32,System.Int32,System.Boolean,System.Boolean)" -->
        <member name="M:MonoForce.Controls.Renderer.End">
            <summary>
            Ends drawing of batched objects.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Renderer.Init">
            <summary>
            Initializes the renderer.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Renderer.Dispose(System.Boolean)">
            <param name="disposing"></param>
            <summary>
            Cleans up resources used by the renderer.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Renderer.GetSourceArea(MonoForce.Controls.Size,MonoForce.Controls.Size,MonoForce.Controls.Margins,MonoForce.Controls.Alignment,System.Int32)">
            <returns>Returns a rectangle that specifies the location and size of the asset that was requested.</returns>
            <param name="index">Index specifying where on the source image, the asset we want is located.</param>
            <param name="alignment">???</param>
            <param name="margins">???</param>
            <param name="partSize">Size of the asset piece to retrieve the source region for.</param>
            <param name="imageSize">Size of the entire image.</param>
            <summary>
            when multiple assets are packed into a single image file.
            Used to grab a piece of the source region of a skin resource
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Renderer.GetTextCenter(System.Single,System.Single)">
            <returns>Returns the center point of the text.</returns>
            <param name="size2">Size of the text itself.</param>
            <param name="size1">Size of the container the text will be in.</param>
            <summary>
            Gets the center point of text within a container.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ScrollBar.PageSize">
            <summary>
            Gets or sets the increment the scroll bar value changes for large increments.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ScrollBar.Range">
            <summary>
            Gets or sets the maximum value of the scroll bar.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ScrollBar.StepSize">
            <summary>
            Gets or sets the increment the scroll bar value changes for small increments.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ScrollBar.Value">
            <summary>
            Gets or sets the current value of the scroll bar.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ScrollBar.btnMinus">
            <summary>
            Button used to decrease the value of the scroll bar.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ScrollBar.btnPlus">
            <summary>
            Button used to increase the value of the scroll bar.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ScrollBar.btnSlider">
            <summary>
            can drag up/down or left/right to scroll.
            Button indicating the current value of the scroll bar that the user
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ScrollBar.orientation">
            <summary>
            Indicates if the control is a horizontal or vertical scroll bar.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ScrollBar.strButton">
            <summary>
            minus buttons.
            String for accessing the resource used to draw the scroll bar plus and
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ScrollBar.strGlyph">
            <summary>
            String for accessing the glyph displayed on the scroll bar slider button.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ScrollBar.strMinus">
            <summary>
            String for accessing the Arrow Up glyph for the scroll bar.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ScrollBar.strPlus">
            <summary>
            String for accessing the Arrow Down glyph for the scroll bar.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ScrollBar.strRail">
            <summary>
            button moves on.
            String for accessing the resource used to draw the rail that the slider
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ScrollBar.strSlider">
            <summary>
            String for accessing the resource used to draw the scroll bar slider button.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ScrollBar.pageSize">
            <summary>
            Increment used for large changes to the scroll bar value.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ScrollBar.range">
            <summary>
            Maximum value of the scroll bar control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ScrollBar.stepSize">
            <summary>
            Increment used for small changes to the scroll bar value.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ScrollBar.value">
            <summary>
            Current value of the scroll bar control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ScrollBar.Init">
            <summary>
            Initializes the scroll bar control.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.ScrollBar.PageSizeChanged">
            <summary>
            Occurs when the page size of the scroll bar changes.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.ScrollBar.RangeChanged">
            <summary>
            Occurs when the range of the scroll bar changes.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.ScrollBar.StepSizeChanged">
            <summary>
            Occurs when the step size of the scroll bar changes.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.ScrollBar.ValueChanged">
            <summary>
            Occurs when the value of the scroll bar changes.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ScrollBar.InitSkin">
            <summary>
            Initializes the skin for the scroll bar control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ScrollBar.OnMouseDown(MonoForce.Controls.MouseEventArgs)">
            <param name="e"></param>
            <summary>
            Handles mouse button down events for the scroll bar.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ScrollBar.OnMouseUp(MonoForce.Controls.MouseEventArgs)">
            <param name="e"></param>
            <summary>
            Handles mouse button up events for the scroll bar.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ScrollBar.OnPageSizeChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles changes in the scroll bar's page size.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ScrollBar.OnRangeChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles changes in the scroll bar's range.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ScrollBar.OnResize(MonoForce.Controls.ResizeEventArgs)">
            <param name="e"></param>
            <summary>
            Handles resizing the scroll bar control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ScrollBar.OnStepSizeChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles changes in the scroll bar's step size.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ScrollBar.OnValueChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles scroll bar value changes.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ScrollBar.ArrowPress(System.Object,MonoForce.Controls.MouseEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles click events for plus and minus button controls.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ScrollBar.btnSlider_Move(System.Object,MonoForce.Controls.MoveEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles movement of the slider button.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ScrollBar.RecalcParams">
            <summary>
            Adjusts the sizes and positions of all buttons based on scroll bar orientation, dimensions, and value.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SideBar.Init">
            <summary>
            Initializes the side bar panel.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SideBar.InitSkin">
            <summary>
            Initializes the skin of the side bar panel.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SideBarPanel.Init">
            <summary>
            Initializes the side bar panel control.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.SkinStates`1">
            <typeparam name="T">The type of data to store in the struct.</typeparam>
            <summary>
            Stores data about each skin state.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinStates`1.Disabled">
            <summary>
            Data for the skin's Disabled state.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinStates`1.Enabled">
            <summary>
            Data for the skin's Enabled state.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinStates`1.Focused">
            <summary>
            Data for the skin's Focused state.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinStates`1.Hovered">
            <summary>
            Data for the skin's Hovered state.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinStates`1.Pressed">
            <summary>
            Data for the skin's Pressed state.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SkinStates`1.#ctor(`0,`0,`0,`0,`0)">
            <param name="disabled">Data to store for the skin's Disabled state.</param>
            <param name="focused">Data to store for the skin's Focused state.</param>
            <param name="pressed">Data to store for the skin's Pressed state.</param>
            <param name="hovered">Data to store for the skin's Hovered state.</param>
            <param name="enabled">Data to store for the skin's Enabled state.</param>
            <summary>
            Creates a new SkinStates instance.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.LayerStates">
            <summary>
            Stores data about a skin Layer's state.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.LayerStates.Color">
            <summary>
            Color tint to apply to the layer state's image asset.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.LayerStates.Index">
            <summary>
            Index of the layer state's image asset.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.LayerStates.Overlay">
            <summary>
            Indicates if the layer state's image asset is to be applied as an overlay or not.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.LayerOverlays">
            <summary>
            Stores data about a skin layer overlay.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.LayerOverlays.Color">
            <summary>
            Color tint to apply to the layer state's image asset.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.LayerOverlays.Index">
            <summary>
            Index of the layer state's image asset.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.SkinInfo">
            <summary>
            Stores skin metadata.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinInfo.Author">
            <summary>
            Person who made the skin.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinInfo.Description">
            <summary>
            Description of the skin.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinInfo.Name">
            <summary>
            Name of the skin.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinInfo.Version">
            <summary>
            Version of the skin. (Should be 0.7 for this version of Neoforce.)
            </summary>
        </member>
        <member name="T:MonoForce.Controls.SkinList`1">
            <typeparam name="T"></typeparam>
            <summary>
            Defines a list of Skins, accessible by name.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.SkinList`1.Item(System.String)" -->
        <member name="M:MonoForce.Controls.SkinList`1.#ctor">
            <summary>
            Creates a default instance of the SkinList class.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SkinList`1.#ctor(MonoForce.Controls.SkinList{`0})">
            <param name="source">Skin list to copy.</param>
            <summary>
            Copy constructor.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.SkinBase">
            <summary>
            Base class for all things skin related.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinBase.Archive">
            <summary>
            Indicates if the object is located in a skin file archive. ???
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinBase.Name">
            <summary>
            Name of the skin.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SkinBase.#ctor">
            <summary>
            Creates a new SkinBase object.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SkinBase.#ctor(MonoForce.Controls.SkinBase)">
            <param name="source">SkinBase object to copy.</param>
            <summary>
            Copy constructor for the SkinBase.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.SkinLayer">
            <summary>
            Represents a single layer of a skin.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinLayer.Alignment">
            <summary>
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinLayer.Attributes">
            <summary>
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinLayer.ContentMargins">
            <summary>
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinLayer.Height">
            <summary>
            Height of the skin layer.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinLayer.Image">
            <summary>
            Image resource for the skin layer.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinLayer.OffsetX">
            <summary>
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinLayer.OffsetY">
            <summary>
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinLayer.Overlays">
            <summary>
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinLayer.SizingMargins">
            <summary>
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinLayer.States">
            <summary>
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinLayer.Text">
            <summary>
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinLayer.Width">
            <summary>
            Width of the skin layer.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SkinLayer.#ctor">
            <summary>
            Creates a new skin layer.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SkinLayer.#ctor(MonoForce.Controls.SkinLayer)">
            <param name="source">SkinLayer to copy.</param>
            <summary>
            Creates a new copy of an existing skin layer.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.SkinText">
            <summary>
            Represents a text object of a skin.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinText.Alignment">
            <summary>
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinText.Colors">
            <summary>
            Text color for each skin state.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinText.Font">
            <summary>
            Font object used for drawing the text.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinText.OffsetX">
            <summary>
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinText.OffsetY">
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SkinText.#ctor">
            <summary>
            Creates a new SkinText object.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SkinText.#ctor(MonoForce.Controls.SkinText)">
            <param name="source">SkinText object to copy.</param>
            <summary>
            Creates a new copy of an existing SkinText object.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.SkinFont">
            <summary>
            Represents a font object of a skin.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.SkinFont.Height">
            <summary>
            Returns the height of a line of text.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinFont.Addon">
            <summary>
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinFont.Asset">
            <summary>
            The sprite font asset file.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinFont.Resource">
            <summary>
            Sprite font used for drawing text.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SkinFont.#ctor">
            <summary>
            Creates a new SkinFont object.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SkinFont.#ctor(MonoForce.Controls.SkinFont)">
            <param name="source">SkinFont to copy.</param>
            <summary>
            Creates a new copy of an existing SkinFont object.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.SkinImage">
            <summary>
            Represents an image of a skin.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinImage.Addon">
            <summary>
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinImage.Asset">
            <summary>
            The sprite font asset file.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinImage.Resource">
            <summary>
            Image resource.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SkinImage.#ctor">
            <summary>
            Creates a new SkinImage object.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SkinImage.#ctor(MonoForce.Controls.SkinImage)">
            <param name="source">SkinImage to copy.</param>
            <summary>
            Creates a copy of an existing SkinImage object.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.SkinCursor">
            <summary>
            Represents a cursor that is part of a skin.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinCursor.Addon">
            <summary>
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinCursor.Asset">
            <summary>
            The sprite font asset file.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinCursor.Resource">
            <summary>
            Cursor image for Windows.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SkinCursor.#ctor">
            <summary>
            Creates a new SkinCursor object.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SkinCursor.#ctor(MonoForce.Controls.SkinCursor)">
            <param name="source">SkinCursor object to copy.</param>
            <summary>
            Creates a copy of an existing SkinCursor object.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.SkinControl">
            <summary>
            Defines the look of a skinned control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinControl.Attributes">
            <summary>
            List of skin control attributes.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinControl.ClientMargins">
            <summary>
            Inner margin values for the control
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinControl.DefaultSize">
            <summary>
            Default size of the control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinControl.Inherits">
            <summary>
            Indicates which, if any, base skin control settings are inherited by this skin control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinControl.Layers">
            <summary>
            List of skin control layers.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinControl.MinimumSize">
            <summary>
            Minimum size settings for this control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinControl.OriginMargins">
            <summary>
            Outer margin values for the control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinControl.ResizerSize">
            <summary>
            Default size of the resize border around the edge of the control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SkinControl.#ctor">
            <summary>
            Creates a new SkinControl object.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SkinControl.#ctor(MonoForce.Controls.SkinControl)">
            <param name="source">SkinControl object to copy.</param>
            <summary>
            Creates a copy of an existing SkinControl object.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.SkinAttribute">
            <summary>
            Defines an attribute of a skinned control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SkinAttribute.Value">
            <summary>
            Value of the skin attribute.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SkinAttribute.#ctor">
            <summary>
            Creates a new SkinAttribute object.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SkinAttribute.#ctor(MonoForce.Controls.SkinAttribute)">
            <param name="source">SkinAttribute to copy.</param>
            <summary>
            Creates a copy of an existing SkinAttribute.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.Skin">
            <summary>
            Defines the look and attributes of various controls.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Skin.Attributes">
            <summary>
            Gets the list of attributes belonging to this skin.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Skin.Controls">
            <summary>
            Gets the list of controls supported by this skin.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Skin.Cursors">
            <summary>
            Gets the list of cursors this skin uses.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Skin.Fonts">
            <summary>
            Gets the list of fonts this skin uses.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Skin.Images">
            <summary>
            Gets the list of images belonging to this skin.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Skin.Info">
            <summary>
            Gets the skin's metadata info.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Skin.Name">
            <summary>
            Gets the name of the skin.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Skin.Version">
            <summary>
            Gets the skin file version.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Skin.attributes">
            <summary>
            List of attributes the skin uses.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Skin.controls">
            <summary>
            List of controls the skin supports.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Skin.cursors">
            <summary>
            List of cursors the skin uses.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Skin.fonts">
            <summary>
            List of fonts the skin uses.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Skin.images">
            <summary>
            List of images the skin uses.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Skin.content">
            <summary>
            Content manager for loading skin files.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Skin.doc">
            <summary>
            Skin XML document where the skin info is defined.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Skin.info">
            <summary>
            Skin metadata information.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Skin.name">
            <summary>
            Name of the skin.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Skin.version">
            <summary>
            Skin file version.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.#ctor(MonoForce.Controls.Manager,System.String)">
            <param name="name">Name of the skin file to load.</param>
            <param name="manager">GUI manager for the skin.</param>
            <summary>
            Creates a new Skin object.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.Init">
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.Dispose(System.Boolean)">
            <param name="disposing"></param>
            <summary>
            Releases the skin's resources.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.ColorToString(Microsoft.Xna.Framework.Color)">
            <returns></returns>
            <param name="c"></param>
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.GetAddonsFolder">
            <returns>Returns the full path to the skin's addon folder.</returns>
            <summary>
            Gets the full path to the skin's addon folder.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.GetArchiveLocation(System.String)">
            <returns>Returns true if the file exists in the skin directory; false otherwise.</returns>
            <param name="name">Name of the skin file archive.</param>
            <summary>
            Returns the path to the specified skin file.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.GetAsset(System.String,System.String,System.String)">
            <returns>Returns the path to the specified asset.</returns>
            <param name="addon">Addon directory if asset if part of an addon. </param>
            <param name="asset">Name of the skin asset to get.</param>
            <param name="type">Type of skin asset to get. ("Fonts", "Cursors", or "Images")</param>
            <summary>
            Gets the path to the specified asset.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.GetFolder">
            <returns>Returns the full path to the skin directory.</returns>
            <summary>
            Gets the full path to the skin folder.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.GetFolder(System.String)">
            <returns></returns>
            <param name="type">Type of skin asset to get. ("Fonts", "Cursors", or "Images")</param>
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.LoadColors(System.Boolean,System.Xml.XmlElement,MonoForce.Controls.SkinStates{Microsoft.Xna.Framework.Color}@)">
            <param name="colors"></param>
            <param name="e"></param>
            <param name="inherited"></param>
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.LoadControlAttributes(MonoForce.Controls.SkinControl,System.Xml.XmlNodeList)">
            <param name="l"></param>
            <param name="sc"></param>
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.LoadControls">
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.LoadCursors(System.String,System.Boolean)">
            <param name="archive"></param>
            <param name="addon"></param>
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.LoadFonts(System.String,System.Boolean)">
            <param name="archive"></param>
            <param name="addon"></param>
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.LoadImages(System.String,System.Boolean)">
            <param name="archive"></param>
            <param name="addon"></param>
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.LoadLayerAttributes(MonoForce.Controls.SkinLayer,System.Xml.XmlNodeList)">
            <param name="l"></param>
            <param name="sl"></param>
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.LoadLayers(MonoForce.Controls.SkinControl,System.Xml.XmlNodeList)">
            <param name="l"></param>
            <param name="sc"></param>
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.LoadSkin(System.String,System.Boolean)">
            <param name="archive"></param>
            <param name="addon"></param>
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.LoadSkinAttributes">
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.ReadAttribute(System.Xml.XmlElement,System.String,System.String,System.Boolean)">
            <returns></returns>
            <param name="needed"></param>
            <param name="defval"></param>
            <param name="attrib"></param>
            <param name="element"></param>
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.ReadAttribute(System.String@,System.Boolean,System.Xml.XmlElement,System.String,System.String,System.Boolean)">
            <param name="needed"></param>
            <param name="defval"></param>
            <param name="attrib"></param>
            <param name="element"></param>
            <param name="inherited"></param>
            <param name="retval"></param>
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.ReadAttributeBool(System.Xml.XmlElement,System.String,System.Boolean,System.Boolean)">
            <returns></returns>
            <param name="needed"></param>
            <param name="defval"></param>
            <param name="attrib"></param>
            <param name="element"></param>
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.ReadAttributeBool(System.Boolean@,System.Boolean,System.Xml.XmlElement,System.String,System.Boolean,System.Boolean)">
            <param name="needed"></param>
            <param name="defval"></param>
            <param name="attrib"></param>
            <param name="element"></param>
            <param name="inherited"></param>
            <param name="retval"></param>
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.ReadAttributeByte(System.Xml.XmlElement,System.String,System.Byte,System.Boolean)">
            <returns></returns>
            <param name="needed"></param>
            <param name="defval"></param>
            <param name="attrib"></param>
            <param name="element"></param>
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.ReadAttributeByte(System.Byte@,System.Boolean,System.Xml.XmlElement,System.String,System.Byte,System.Boolean)">
            <param name="needed"></param>
            <param name="defval"></param>
            <param name="attrib"></param>
            <param name="element"></param>
            <param name="inherited"></param>
            <param name="retval"></param>
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.ReadAttributeColor(Microsoft.Xna.Framework.Color@,System.Boolean,System.Xml.XmlElement,System.String,Microsoft.Xna.Framework.Color,System.Boolean)">
            <param name="needed"></param>
            <param name="defval"></param>
            <param name="attrib"></param>
            <param name="element"></param>
            <param name="inherited"></param>
            <param name="retval"></param>
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.ReadAttributeInt(System.Xml.XmlElement,System.String,System.Int32,System.Boolean)">
            <returns></returns>
            <param name="needed"></param>
            <param name="defval"></param>
            <param name="attrib"></param>
            <param name="element"></param>
            <summary>
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Skin.ReadAttributeInt(System.Int32@,System.Boolean,System.Xml.XmlElement,System.String,System.Int32,System.Boolean)">
            <param name="needed"></param>
            <param name="defval"></param>
            <param name="attrib"></param>
            <param name="element"></param>
            <param name="inherited"></param>
            <param name="retval"></param>
            <summary>
            </summary>
        </member>
        <member name="T:MonoForce.Controls.SpinBoxMode">
            <summary>
            Specifies the data that the spin box works with.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SpinBoxMode.Range">
            <summary>
            Adjusts a single numeric value by the defined step amount.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SpinBoxMode.List">
            <summary>
            Adjusts the index referencing the selected item in a collection.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.SpinBox.ItemIndex">
            <summary>
            Gets or sets the index of the selected item in the collection in List mode.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.SpinBox.Items">
            <summary>
            Gets the collection of objects the spin box iterates through in List mode.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.SpinBox.Maximum">
            <summary>
            Gets or sets the maximum value of the spin box in Range mode.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.SpinBox.Minimum">
            <summary>
            Gets or sets the minimum value of the spin box in Range mode.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.SpinBox.Mode">
            <summary>
            Gets or sets the data that the spin box works with. (Collection or numeric value.)
            </summary>
        </member>
        <member name="P:MonoForce.Controls.SpinBox.ReadOnly">
            <summary>
            Indicates if the control's text box is read-only or not.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.SpinBox.Rounding">
            <summary>
            Gets or sets the number of decimal places the spin box allows.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.SpinBox.Step">
            <summary>
            the up or down button is pressed in Range mode.
            Gets or sets the amount the value of the spin box changes when
            </summary>
        </member>
        <member name="P:MonoForce.Controls.SpinBox.Value">
            <summary>
            Gets or sets the spin box value in Range mode.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SpinBox.btnDown">
            <summary>
            Button used to decrease the spin box value.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SpinBox.btnUp">
            <summary>
            Button used to increase the spin box value.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SpinBox.items">
            <summary>
            Collection of items the spin box will display
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SpinBox.itemIndex">
            <summary>
            Selected item index if the items list is used.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SpinBox.maximum">
            <summary>
            Maximum value of the spin box.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SpinBox.minimum">
            <summary>
            Minimum value of the spin box.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SpinBox.mode">
            <summary>
            it iterates through items defined in its item list.
            Defines whether the spin box works with numeric values or if
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SpinBox.rounding">
            <summary>
            Decimal places to round values to.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SpinBox.step">
            <summary>
            Amount the value increases/decreases when the up/down buttons are clicked.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.SpinBox.value">
            <summary>
            Current value of the spin box.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SpinBox.Init">
            <summary>
            Initializes the spin box control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SpinBox.InitSkin">
            <summary>
            Initializes the skin of the spin box control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SpinBox.OnGamePadDown(MonoForce.Controls.GamePadEventArgs)">
            <param name="e"></param>
            <summary>
            Handles gamepad button press events.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SpinBox.OnGamePadPress(MonoForce.Controls.GamePadEventArgs)">
            <param name="e"></param>
            <summary>
            Handles up/down inputs from a gamepad.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SpinBox.OnKeyPress(MonoForce.Controls.KeyEventArgs)">
            <param name="e"></param>
            <summary>
            Handles key press events.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SpinBox.OnResize(MonoForce.Controls.ResizeEventArgs)">
            <param name="e"></param>
            <summary>
            Handles resizing the spin box control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SpinBox.btn_MousePress(System.Object,MonoForce.Controls.MouseEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles button up/down clicks.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.SpinBox.ShiftIndex(System.Boolean)">
            <param name="direction">Indicates which way to shift index/values. (True to increase; false to decrease.)</param>
            <summary>
            Adjusts the spin box's value up or down.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.StackPanel.AutoRefresh">
            <summary>
            Should the stack panel refresh itself, when a control is added
            </summary>
        </member>
        <member name="M:MonoForce.Controls.StatusBar.Init">
            <summary>
            Initializes the status bar control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.StatusBar.InitSkin">
            <summary>
            Initializes the skin of the status bar control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TabControlGamePadActions.NextTab">
            <summary>
            Button used to switch to the next tab. (RightTrigger)
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TabControlGamePadActions.PrevTab">
            <summary>
            Button used to switch to the previous tab. (LeftTrigger)
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TabPage.HeaderRect">
            <summary>
            Gets the header region of the tab page.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TabPage.headerRect">
            <summary>
            Defines the header region of the tab page.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TabPage.CalcRect(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Graphics.SpriteFont,MonoForce.Controls.Margins,Microsoft.Xna.Framework.Point,System.Boolean)">
            <param name="first">Indicates if this is the first tab page header.</param>
            <param name="offset">Offset to apply from previous tab.</param>
            <param name="margins">Tab header content margins.</param>
            <param name="font">Font used to draw the header text.</param>
            <param name="prev">Header region of the previous tab page control.</param>
            <summary>
            Calculates the region where the tab page header will be displayed.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TabControl.SelectedIndex">
            <summary>
            Gets or sets the index of the selected tab page.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TabControl.SelectedPage">
            <summary>
            Gets or sets the selected tab page.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TabControl.TabPages">
            <summary>
            Returns the list of tab pages belonging to the tab control as an array.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TabControl.tabPages">
            <summary>
            List of tab pages that make up the tab control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TabControl.hoveredIndex">
            <summary>
            Index of the tab page header hovered by the mouse, if any.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TabControl.selectedIndex">
            <summary>
            Index of the selected tab page.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TabControl.AddPage(System.String)">
            <returns>Returns the created tab page.</returns>
            <param name="text">Tab page header text.</param>
            <summary>
            Creates a tab page with the specified header text and adds it to the tab control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TabControl.AddPage">
            <returns>Returns the created tab page.</returns>
            <summary>
            Creates a tab page with the default header text and adds it to the tab control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TabControl.Init">
            <summary>
            Initializes the tab control.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.TabControl.PageChanged">
            <summary>
            Occurs when the selected tab page changes.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TabControl.RemovePage(MonoForce.Controls.TabPage,System.Boolean)">
            <param name="dispose">Indicates if the tab page should be disposed after removal.</param>
            <param name="page">Tab page to remove from the tab control.</param>
            <summary>
            Removes the specified tab page from the tab control and disposes it (if specified.)
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TabControl.RemovePage(MonoForce.Controls.TabPage)">
            <param name="page">Tab page to remove from the tab control.</param>
            <summary>
            Removes the specified tab page from the control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TabControl.InitSkin">
            <summary>
            Initializes the skin of the tab control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TabControl.OnMouseDown(MonoForce.Controls.MouseEventArgs)">
            <param name="e"></param>
            <summary>
            Handles mouse down events for the tab control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TabControl.OnMouseMove(MonoForce.Controls.MouseEventArgs)">
            <param name="e"></param>
            <summary>
            Handles mouse move events for the tab control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TabControl.OnPageChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handler for when a new tab page is selected.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TabControl.Input_GamePadDown(System.Object,MonoForce.Controls.GamePadEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles gamepad input for the tab control.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.TextBoxMode">
            <summary>
            Specifies the type of text box.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBoxMode.Normal">
            <summary>
            Standard text box control. Single line.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBoxMode.Password">
            <summary>
            Masked text box control. Input is replaced by the control's password character.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBoxMode.Multiline">
            <summary>
            Multi-line text box control.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.TextBox">
            <summary>
            Represents a text box control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.crDefault">
            <summary>
            Not used?
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.crText">
            <summary>
            String indicating which cursor resource should be used for this control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.lrCursor">
            <summary>
            String for accessing the text box cursor layer.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.lrTextBox">
            <summary>
            String for accessing the text box control layer.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.skTextBox">
            <summary>
            String for accessing the text box control skin.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TextBox.AutoSelection">
            <summary>
            Indicates if all text should be selected automatically when the text box receives focus.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TextBox.CaretVisible">
            <summary>
            Indicates if the text insertion position is visible or not.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TextBox.CursorPosition">
            <summary>
            Gets or sets the current position of the caret in the text box.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TextBox.DrawBorders">
            <summary>
            Indicates if the borders of the text box control should be drawn or not.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TextBox.Mode">
            <summary>
            Gets or sets the current mode of the text box control.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TextBox.PasswordChar">
            <summary>
            Gets or sets the character used to mask input when the text box is in password mode.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TextBox.ReadOnly">
            <summary>
            Indicates if the text box allows user input or not.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TextBox.ScrollBars">
            <summary>
            Gets or sets the scroll bars the text box should display.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TextBox.SelectedText">
            <summary>
            Gets all text within the current selection.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TextBox.SelectionLength">
            <summary>
            Gets or sets (from the current value of SelectionStart) the length of the selection.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TextBox.SelectionStart">
            <summary>
            Gets or sets the start position of the selection.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TextBox.Text">
            <summary>
            Gets or sets the contents of the text box control.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TextBox.WordWrap">
            <summary>
            Indicates if word wrap is enabled in multi-line text box controls.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TextBox.Lines">
            <summary>
            Returns the text content as a Separator delimited list of strings.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TextBox.PosX">
            <summary>
            Gets or sets the X position of the caret on the current line.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TextBox.PosY">
            <summary>
            Gets or sets the Y position of the caret in the text box.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.horz">
            <summary>
            Horizontal scroll bar of the text box.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.Separator">
            <summary>
            Characted used as the line separator character.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.vert">
            <summary>
            Vertical scroll bar of the text box.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.autoSelection">
            <summary>
            Indicates if all text should be selected automatically when the control gains focus.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.buffer">
            <summary>
            Internal use during text splitting operations.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.caretVisible">
            <summary>
            Indicates if the caret is displayed or not.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.charsDrawn">
            <summary>
            Number of characters that can fit horizontally in the client area.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.drawBorders">
            <summary>
            Indicates if the borders of the text box should be drawn.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.font">
            <summary>
            Font used to draw the control's text.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.lines">
            <summary>
            Text content broken into individual lines.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.linesDrawn">
            <summary>
            Number of lines of text that can fit vertically in the client area.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.mode">
            <summary>
            Indicates if the text box is a single-line, multi-line, or password text box.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.passwordChar">
            <summary>
            Specifies which character will be used to mask input when the text box is in Password mode.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.posx">
            <summary>
            X position of the text caret.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.posy">
            <summary>
            Y position of the text caret.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.readOnly">
            <summary>
            Indicates if the text box can accept user input or if it is read-only.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.scrollBars">
            <summary>
            Specifies which, if any, scroll bars should be displayed in the text box.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.selection">
            <summary>
            Currently selected text of the control, specified by starting and ending indexes.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.showCursor">
            <summary>
            Indicates if the cursor should be displayed when hovered. ???
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.shownText">
            <summary>
            Text that is currently visible in the client area.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.text">
            <summary>
            Current text content of the control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TextBox.wordWrap">
            <summary>
            Indicates if word wrap is enabled on multi-line text boxes.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.#ctor(MonoForce.Controls.Manager)">
            <param name="manager">GUI manager for the control.</param>
            <summary>
            Creates a new TextBox control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.Init">
            <summary>
            Initializes the text box control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.InitSkin">
            <summary>
            Initializes the skin of the text box control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.Update(Microsoft.Xna.Framework.GameTime)">
            <param name="gameTime">Snapshot of the application's timing values.</param>
            <summary>
            Updates the text box cursor state.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.AdjustMargins">
            <summary>
            Update the text box margins based on the visibility of the scroll bars.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.OnFocusGained(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handler for when the text box gains focus.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.OnFocusLost(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handler for when the text box loses focus.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.OnKeyPress(MonoForce.Controls.KeyEventArgs)">
            <param name="e"></param>
            <summary>
            Handles key press events for the text box.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.OnMouseDown(MonoForce.Controls.MouseEventArgs)">
            <param name="e"></param>
            <summary>
            Handles mouse button down events for the text box.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.OnMouseMove(MonoForce.Controls.MouseEventArgs)">
            <param name="e"></param>
            <summary>
            Handles mouse move events for the text box.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.OnMouseUp(MonoForce.Controls.MouseEventArgs)">
            <param name="e"></param>
            <summary>
            Handles mouse up events for the text box.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.OnResize(MonoForce.Controls.ResizeEventArgs)">
            <param name="e"></param>
            <summary>
            Handles resize events for the text box.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.CharAtPos(Microsoft.Xna.Framework.Point)">
            <returns>Returns the cursor position that corresponds to the point received.</returns>
            <param name="pos">Point to find the text position of.</param>
            <summary>
            box that is closest to the specified position.
            Given a point (such as mouse position), this determines the position in the text
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.ClientArea_Draw(System.Object,MonoForce.Controls.DrawEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles drawing the client area of the text box control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.DeterminePages">
            <summary>
            client area of the text box.
            Updates the number of lines and characters drawn based on the current dimensions of the
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.DrawSelection(MonoForce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle)">
            <param name="rect">Region where the selection overlay should be drawn.</param>
            <param name="renderer">Render management object.</param>
            <summary>
            Draws the text box's selection overlay to highlight selected text.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.FindNextWord(System.String)">
            <returns>
            Returns the index of the start of the next word or the last valid index if the cursor has reached the end
            point.
            </returns>
            <param name="text">Text content to search.</param>
            <summary>
            From the current cursor position, this finds the index of the start of the word ahead of it.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.FindPrevWord(System.String)">
            <returns>Returns the index of the start of the previous word or zero if the cursor has reached the starting point.</returns>
            <param name="text">Text content to search.</param>
            <summary>
            word, or the start of the previous word if the cursor is at the start of a word..
            This will be the start of the current word, if the cursor is positioned in the middle of a
            From the current cursor position, this finds the index of the start of the word behind it.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.GetFitChars(System.String,System.Int32)">
            <returns>Returns the number of characters, from the start of the string, that will fit in the width specified.</returns>
            <param name="width">Width available for text placement.</param>
            <param name="text">Text string to fit.</param>
            <summary>
            Returns the number of characters of the specified text that will fit within the specified width.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.GetMaxLine">
            <returns>The longest line in the text box.</returns>
            <summary>
            Gets the line of the text box with the greatest length.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.GetPos(System.Int32,System.Int32)">
            <returns>Returns the cursor position for the specified location.</returns>
            <param name="y">Line index.</param>
            <param name="x">Column index.</param>
            <summary>
            that matches the specified location.
            Given the column (x) and line (y) indexes, this returns the cursor position
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.GetPosX(System.Int32)">
            <returns>Returns the index of the column at the specified cursor position.</returns>
            <param name="pos">Position of the cursor in the text.</param>
            <summary>
            Gets the column index of the specified position.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.GetPosY(System.Int32)">
            <returns>Returns the index of the line where the cursor is positioned.</returns>
            <param name="pos">Cursor position in text.</param>
            <summary>
            Gets the line index where the cursor is currently positioned.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.GetStringWidth(System.String,System.Int32)">
            <returns>Returns the width of the specified number of characters in the supplied text.</returns>
            <param name="count">Number of characters from the start of the string to measure.</param>
            <param name="text">String to measure the width of.</param>
            <summary>
            Measures the width of the specified text or a sub-string of the text.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.ProcessScrolling">
            <summary>
            of the text box and the current cursor position within the text box.
            Updates scroll bar values and page sizes based on the dimensions of the client area
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.sb_ValueChanged(System.Object,MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles scroll events for the text box.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.SetupBars">
            <summary>
            Updates scroll bar settings based on dimensions of the client area and text content.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.SplitLines(System.String)">
            <returns>List of strings delimited by the text box separator character.</returns>
            <param name="text">Text to split.</param>
            <summary>
            Splits the specified text into a list of strings based on the text box separator character.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TextBox.WrapWords(System.String,System.Int32)">
            <returns>Returns the word wrapped string.</returns>
            <param name="size">Width of the text box the text will be wrapped in.</param>
            <param name="text">Text content to word wrap.</param>
            <summary>
            Breaks up text content so that all lines fit within the width of the client area of the text box.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.TextBox.Selection">
            <summary>
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ToolBar.FullRow">
            <summary>
            Indicates if the tool bar should stretch across the entire width of its container.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ToolBar.Row">
            <summary>
            Gets or sets the row index this tool bar occupies in its parent container.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ToolBar.fullRow">
            <summary>
            Indicates if the tool bar should take up the full width of its parent tool bar container.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ToolBar.row">
            <summary>
            Row of the tool bar panel this tool bar defines.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ToolBar.Init">
            <summary>
            Initializes the tool bar control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ToolBar.InitSkin">
            <summary>
            Initializes the skin of the tool bar control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ToolBarButton.Init">
            <summary>
            Initializes the tool bar button.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ToolBarButton.InitSkin">
            <summary>
            Initializes the skin of the tool bar button.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ToolBarPanel.Init">
            <summary>
            Initializes the tool bar panel control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ToolBarPanel.InitSkin">
            <summary>
            Initializes the skin for the tool bar panel control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ToolBarPanel.Update(Microsoft.Xna.Framework.GameTime)">
            <param name="gameTime">Snapshot of the application's timing values.</param>
            <summary>
            Updates the tool bar panel control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ToolBarPanel.OnResize(MonoForce.Controls.ResizeEventArgs)">
            <param name="e"></param>
            <summary>
            Handles resize events for the tool bar panel control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ToolBarPanel.AlignBars">
            <summary>
            Positions and sizes the tool bar panel's child tool bar controls.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.ToolTip.Visible">
            <summary>
            Indicates whether the tool tip is visible or not.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ToolTip.Init">
            <summary>
            Initializes the tool tip control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.ToolTip.InitSkin">
            <summary>
            Initializes the skin of the tool tip control.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TrackBar.PageSize">
            <summary>
            Gets or sets the amount the track bar's value is altered for large increments.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TrackBar.Range">
            <summary>
            Gets or sets the value range of the track bar control.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TrackBar.Scale">
            <summary>
            Indicates if the scale for the track bar should be drawn.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TrackBar.StepSize">
            <summary>
            Gets or sets the amount the track bar's value is altered for small increments.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.TrackBar.Value">
            <summary>
            Gets or sets the current value of the track bar control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TrackBar.btnSlider">
            <summary>
            Slider button that can be dragged to change the value of the track bar control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TrackBar.pageSize">
            <summary>
            Large increment at which the track bar value changes.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TrackBar.range">
            <summary>
            Range the track bar control's value can be within. [0, range]
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TrackBar.scale">
            <summary>
            Indicates if the scale for the track bar should be drawn.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TrackBar.stepSize">
            <summary>
            Small increment at which the track bar value changes.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.TrackBar.value">
            <summary>
            Current value of the track bar control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TrackBar.Init">
            <summary>
            Initializes the track bar control.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.TrackBar.PageSizeChanged">
            <summary>
            Occurs when the page size of the track bar changes.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.TrackBar.RangeChanged">
            <summary>
            Occurs when the range of the track bar changes.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.TrackBar.StepSizeChanged">
            <summary>
            Occurs when the step size value of the track bar changes.
            </summary>
        </member>
        <member name="E:MonoForce.Controls.TrackBar.ValueChanged">
            <summary>
            Occurs when the value of the track bar changes.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TrackBar.InitSkin">
            <summary>
            Initializes the skin of the track bar control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TrackBar.OnMousePress(MonoForce.Controls.MouseEventArgs)">
            <param name="e"></param>
            <summary>
            Handles mouse press events for the track bar control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TrackBar.OnPageSizeChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles changes in the track bar's page size.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TrackBar.OnRangeChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles changes in the track bar's range.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TrackBar.OnResize(MonoForce.Controls.ResizeEventArgs)">
            <param name="e"></param>
            <summary>
            Handles resizing of the track bar control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TrackBar.OnStepSizeChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles changes in the track bar's step size.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TrackBar.OnValueChanged(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles changes in the track bar's value.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TrackBar.btnSlider_GamePadPress(System.Object,MonoForce.Controls.GamePadEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles gamepad left/right button presses for the track bar control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TrackBar.btnSlider_KeyPress(System.Object,MonoForce.Controls.KeyEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles key press events for the track bar control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TrackBar.btnSlider_Move(System.Object,MonoForce.Controls.MoveEventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles slider button move events.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.TrackBar.RecalcParams">
            <summary>
            Updates the position of the slider button.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.Message">
            <summary>
            Enumerates GUI control events.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.ControlState">
            <summary>
            Enumerates GUI control states.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ControlState.Enabled">
            <summary>
            The control is enabled.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ControlState.Hovered">
            <summary>
            Mouse cursor is directly over the control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ControlState.Pressed">
            <summary>
            The control is pressed down.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ControlState.Focused">
            <summary>
            The control has input focus.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ControlState.Disabled">
            <summary>
            The control is disabled and cannot be used.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.Alignment">
            <summary>
            Describes how control content is aligned within the control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Alignment.None">
            <summary>
            No alignment. Defaults to TopLeft?
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Alignment.TopLeft">
            <summary>
            Content is left-aligned at the top of the control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Alignment.TopCenter">
            <summary>
            Content is centered at the top of the control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Alignment.TopRight">
            <summary>
            Content is right-aligned at the top of the control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Alignment.MiddleLeft">
            <summary>
            Content is left-aligned in the center of the control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Alignment.MiddleCenter">
            <summary>
            Content is centered in the control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Alignment.MiddleRight">
            <summary>
            Content is right-aligned in the center of the control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Alignment.BottomLeft">
            <summary>
            Content is left-aligned at the bottom of the control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Alignment.BottomCenter">
            <summary>
            Content is centered at the bottom of the control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Alignment.BottomRight">
            <summary>
            Content is right-aligned at the bottom of the control.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.ModalResult">
            <summary>
            Indicates which dialog button was pressed.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ModalResult.None">
            <summary>
            No alignment. Defaults to TopLeft?
            </summary>
        </member>
        <member name="T:MonoForce.Controls.Orientation">
            <summary>
            Indicates the orientation of stack panels and scroll bars.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.ScrollBars">
            <summary>
            Indicates which scroll bars are present in a text box.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.ScrollBars.None">
            <summary>
            No alignment. Defaults to TopLeft?
            </summary>
        </member>
        <member name="T:MonoForce.Controls.Anchors">
            <summary>
            Describes how a control is anchored within its parent container.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.Margins">
            <summary>
            Describes a control's margins.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Margins.Horizontal">
            <summary>
            Gets the total horizontal margin amount.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Margins.Vertical">
            <summary>
            Gets the total vertical margin amount.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Margins.Bottom">
            <summary>
            Bottom side margin value.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Margins.Left">
            <summary>
            Left side margin value.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Margins.Right">
            <summary>
            Right side margin value.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Margins.Top">
            <summary>
            Top side margin value.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Margins.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <param name="bottom">Bottom side margin amount.</param>
            <param name="right">Right side margin amount.</param>
            <param name="top">Top side margin amount.</param>
            <param name="left">Left side margin amount.</param>
            <summary>
            Creates a Margins object with the specified values.
            </summary>
        </member>
        <member name="T:MonoForce.Controls.Size">
            <summary>
            Describes the size of a control.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Size.Zero">
            <summary>
            Returns a Size object with null dimensions.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Size.Height">
            <summary>
            Height of the control.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Size.Width">
            <summary>
            Width of the control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Size.#ctor(System.Int32,System.Int32)">
            <param name="height">Height of the object.</param>
            <param name="width">Width of the object.</param>
            <summary>
            Creates a new Size object with the specified dimensions.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Utilities.DeriveControlName(MonoForce.Controls.Control)">
            <returns>Returns the unqualified name of the specified control.</returns>
            <param name="control">Control to get the name of.</param>
            <summary>
            Attempts to return the name of a control.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Utilities.ParseBevelStyle(System.String)">
            <returns>Returns the string converted to a BevelStyle object.</returns>
            <param name="str">Name of the bevel style value.</param>
            <summary>
            Parses a BevelStyle enumeration defined in XML.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Utilities.ParseColor(System.String)">
            <returns>Returns the string converted to a Color object.</returns>
            <param name="str">";" delimited string of RGBA values.</param>
            <summary>
            Parses a color value defined in XML.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Window.BorderVisible">
            <summary>
            Indicates if the window should draw its border.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Window.CaptionVisible">
            <summary>
            Indicates if the window should draw its caption.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Window.CloseButtonVisible">
            <summary>
            Indicates if the window should draw its close button.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Window.DragAlpha">
            <summary>
            Gets or sets the alpha value that should be applied to the window during a drag operation.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Window.Icon">
            <summary>
            Gets or sets the window icon image.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Window.IconVisible">
            <summary>
            Indicates if the window should draw its icon.
            </summary>
        </member>
        <member name="P:MonoForce.Controls.Window.Shadow">
            <summary>
            Indicates if the window should draw its shadow.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:MonoForce.Controls.Window.ClearBackground" -->
        <member name="F:MonoForce.Controls.Window.borderVisible">
            <summary>
            Indicates if the window border is drawn.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Window.captionVisible">
            <summary>
            Indicates if the window caption is drawn.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Window.closeButtonVisible">
            <summary>
            Indicates if the close button is drawn.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Window.dragAlpha">
            <summary>
            Alpha value used when dragging the window.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Window.icon">
            <summary>
            Window icon image.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Window.iconVisible">
            <summary>
            Indicates if the window icon is drawn.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Window.oldAlpha">
            <summary>
            Alpha value of the window.
            </summary>
        </member>
        <member name="F:MonoForce.Controls.Window.shadow">
            <summary>
            Indicates if the window shadow is drawn.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:MonoForce.Controls.Window.clearBackground" -->
        <member name="M:MonoForce.Controls.Window.Center">
            <summary>
            Centers the window on screen.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Window.Init">
            <summary>
            Initializes the window.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Window.InitSkin">
            <summary>
            Initializes the skin of the window.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Window.AdjustMargins">
            <summary>
            Adjusts the client area margins based on the visibility of the caption area and window border.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Window.Dispose(System.Boolean)">
            <param name="disposing"></param>
            <summary>
            Cleans up window resources.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Window.OnDoubleClick(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handles double click events for the window.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Window.OnMoveBegin(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handler for when the window starts a move event.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Window.OnMoveEnd(MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <summary>
            Handler for when the window completes a move event.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Window.OnResize(MonoForce.Controls.ResizeEventArgs)">
            <param name="e"></param>
            <summary>
            Handles resizing of the window.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Window.Render(MonoForce.Controls.Renderer,Microsoft.Xna.Framework.GameTime)">
            <param name="gameTime">Snapshot of the application's timing values.</param>
            <param name="renderer">Render management object.</param>
            <summary>
            Draws the window.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Window.btnClose_Click(System.Object,MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles closing the window when the close button is clicked.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Window.btnClose_SkinChanged(System.Object,MonoForce.Controls.EventArgs)">
            <param name="e"></param>
            <param name="sender"></param>
            <summary>
            Handles reskinning the close button when the skin changes.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Window.GetIconRect">
            <returns>Returns the window icon's destination region where it will be drawn. </returns>
            <summary>
            Creates the rectangle where the window icon should be displayed.
            </summary>
        </member>
        <member name="M:MonoForce.Controls.Window.SetMovableArea">
            <summary>
            Sets the region where the window can be moved to.
            </summary>
        </member>
    </members>
</doc>
